// *** WARNING: this file was generated by pulumi-gen-awsx. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

import * as pulumiAws from "@pulumi/aws";

/**
 * Attach an EC2 instance or Lambda to a Load Balancer. This will create required permissions if attaching to a Lambda Function.
 */
export class TargetGroupAttachment extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'awsx:lb:TargetGroupAttachment';

    /**
     * Returns true if the given object is an instance of TargetGroupAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetGroupAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetGroupAttachment.__pulumiType;
    }

    /**
     * Auto-created Lambda permission, if targeting a Lambda function
     */
    public /*out*/ readonly lambdaPermission!: pulumi.Output<pulumiAws.lambda.Permission | undefined>;
    /**
     * Underlying Target Group Attachment resource
     */
    public /*out*/ readonly targetGroupAttachment!: pulumi.Output<pulumiAws.lb.TargetGroupAttachment>;

    /**
     * Create a TargetGroupAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TargetGroupAttachmentArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["lambda"] = args ? args.lambda : undefined;
            resourceInputs["lambdaArn"] = args ? args.lambdaArn : undefined;
            resourceInputs["targetGroup"] = args ? args.targetGroup : undefined;
            resourceInputs["targetGroupArn"] = args ? args.targetGroupArn : undefined;
            resourceInputs["lambdaPermission"] = undefined /*out*/;
            resourceInputs["targetGroupAttachment"] = undefined /*out*/;
        } else {
            resourceInputs["lambdaPermission"] = undefined /*out*/;
            resourceInputs["targetGroupAttachment"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TargetGroupAttachment.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a TargetGroupAttachment resource.
 */
export interface TargetGroupAttachmentArgs {
    /**
     * EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     */
    instance?: pulumi.Input<pulumiAws.ec2.Instance>;
    /**
     * ID of an EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     */
    lambda?: pulumi.Input<pulumiAws.lambda.Function>;
    /**
     * ARN of a Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     */
    lambdaArn?: pulumi.Input<string>;
    /**
     * Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
     */
    targetGroup?: pulumi.Input<pulumiAws.lb.TargetGroup>;
    /**
     * ARN of the Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
     */
    targetGroupArn?: pulumi.Input<string>;
}
