{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "classic/acmpca/index.ts",
        "classic/acmpca/metrics.ts",
        "classic/apigateway/api.ts",
        "classic/apigateway/apikey.ts",
        "classic/apigateway/cognitoAuthorizer.ts",
        "classic/apigateway/index.ts",
        "classic/apigateway/lambdaAuthorizer.ts",
        "classic/apigateway/metrics.ts",
        "classic/apigateway/requestValidator.ts",
        "classic/apigateway/swagger_json.ts",
        "classic/autoscaling/autoscaling.ts",
        "classic/autoscaling/index.ts",
        "classic/autoscaling/launchConfiguration.ts",
        "classic/autoscaling/metrics.ts",
        "classic/autoscaling/schedule.ts",
        "classic/autoscaling/stepScaling.ts",
        "classic/autoscaling/targetTracking.ts",
        "classic/aws.ts",
        "classic/billing/index.ts",
        "classic/billing/metrics.ts",
        "classic/cloudfront/index.ts",
        "classic/cloudfront/metrics.ts",
        "classic/cloudtrail/index.ts",
        "classic/cloudtrail/trail.ts",
        "classic/cloudwatch/dashboard.ts",
        "classic/cloudwatch/index.ts",
        "classic/cloudwatch/metric.ts",
        "classic/cloudwatch/metrics.ts",
        "classic/cloudwatch/widget.ts",
        "classic/cloudwatch/widgets_annotations.ts",
        "classic/cloudwatch/widgets_flow.ts",
        "classic/cloudwatch/widgets_graph.ts",
        "classic/cloudwatch/widgets_json.ts",
        "classic/cloudwatch/widgets_simple.ts",
        "classic/codebuild/index.ts",
        "classic/codebuild/metrics.ts",
        "classic/cognito/index.ts",
        "classic/cognito/metrics.ts",
        "classic/dynamodb/index.ts",
        "classic/dynamodb/metrics.ts",
        "classic/ebs/index.ts",
        "classic/ebs/metrics.ts",
        "classic/ec2/cidr.ts",
        "classic/ec2/index.ts",
        "classic/ec2/internetGateway.ts",
        "classic/ec2/metrics.ts",
        "classic/ec2/natGateway.ts",
        "classic/ec2/securityGroup.ts",
        "classic/ec2/securityGroupRule.ts",
        "classic/ec2/subnet.ts",
        "classic/ec2/vpc.ts",
        "classic/ec2/vpcTopology.ts",
        "classic/ecr/index.ts",
        "classic/ecr/lifecyclePolicy.ts",
        "classic/ecr/repository.ts",
        "classic/ecr/repositoryImage.ts",
        "classic/ecs/capacityProviderService.ts",
        "classic/ecs/cluster.ts",
        "classic/ecs/container.ts",
        "classic/ecs/ec2Service.ts",
        "classic/ecs/fargateService.ts",
        "classic/ecs/image.ts",
        "classic/ecs/index.ts",
        "classic/ecs/metrics.ts",
        "classic/ecs/service.ts",
        "classic/ecs/taskDefinition.ts",
        "classic/efs/index.ts",
        "classic/efs/metrics.ts",
        "classic/index.ts",
        "classic/lambda/index.ts",
        "classic/lambda/metrics.ts",
        "classic/lb/application.ts",
        "classic/lb/index.ts",
        "classic/lb/listener.ts",
        "classic/lb/listenerRule.ts",
        "classic/lb/loadBalancer.ts",
        "classic/lb/metrics.ts",
        "classic/lb/network.ts",
        "classic/lb/targetGroup.ts",
        "classic/lb/targetGroupAttachment.ts",
        "classic/rds/index.ts",
        "classic/rds/metrics.ts",
        "classic/role.ts",
        "classic/s3/index.ts",
        "classic/s3/metrics.ts",
        "classic/sns/index.ts",
        "classic/sns/metrics.ts",
        "classic/sqs/index.ts",
        "classic/sqs/metrics.ts",
        "classic/utils.ts",
        "cloudtrail/index.ts",
        "cloudtrail/trail.ts",
        "ecr/index.ts",
        "ecr/repository.ts",
        "ecs/ec2service.ts",
        "ecs/ec2taskDefinition.ts",
        "ecs/fargateService.ts",
        "ecs/fargateTaskDefinition.ts",
        "ecs/index.ts",
        "index.ts",
        "lb/applicationLoadBalancer.ts",
        "lb/index.ts",
        "provider.ts",
        "types/enums/ecr/index.ts",
        "types/enums/index.ts",
        "types/enums/vpc/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vpc/defaultVpc.ts",
        "vpc/getDefaultVpc.ts",
        "vpc/index.ts",
        "vpc/vpc.ts"
    ]
}
