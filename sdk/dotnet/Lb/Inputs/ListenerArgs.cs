// *** WARNING: this file was generated by pulumi-gen-awsx. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Awsx.Lb.Inputs
{

    /// <summary>
    /// Provides a Load Balancer Listener resource.
    /// 
    /// &gt; **Note:** `aws.alb.Listener` is known as `aws.lb.Listener`. The functionality is identical.
    /// 
    /// ## Example Usage
    /// 
    /// ### Forward Action
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const frontEnd = new aws.lb.LoadBalancer("front_end", {});
    /// const frontEndTargetGroup = new aws.lb.TargetGroup("front_end", {});
    /// const frontEndListener = new aws.lb.Listener("front_end", {
    ///     loadBalancerArn: frontEnd.arn,
    ///     port: 443,
    ///     protocol: "HTTPS",
    ///     sslPolicy: "ELBSecurityPolicy-2016-08",
    ///     certificateArn: "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
    ///     defaultActions: [{
    ///         type: "forward",
    ///         targetGroupArn: frontEndTargetGroup.arn,
    ///     }],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// front_end = aws.lb.LoadBalancer("front_end")
    /// front_end_target_group = aws.lb.TargetGroup("front_end")
    /// front_end_listener = aws.lb.Listener("front_end",
    ///     load_balancer_arn=front_end.arn,
    ///     port=443,
    ///     protocol="HTTPS",
    ///     ssl_policy="ELBSecurityPolicy-2016-08",
    ///     certificate_arn="arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
    ///     default_actions=[aws.lb.ListenerDefaultActionArgs(
    ///         type="forward",
    ///         target_group_arn=front_end_target_group.arn,
    ///     )])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var frontEnd = new Aws.LB.LoadBalancer("front_end");
    /// 
    ///     var frontEndTargetGroup = new Aws.LB.TargetGroup("front_end");
    /// 
    ///     var frontEndListener = new Aws.LB.Listener("front_end", new()
    ///     {
    ///         LoadBalancerArn = frontEnd.Arn,
    ///         Port = 443,
    ///         Protocol = "HTTPS",
    ///         SslPolicy = "ELBSecurityPolicy-2016-08",
    ///         CertificateArn = "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "forward",
    ///                 TargetGroupArn = frontEndTargetGroup.Arn,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		frontEnd, err := lb.NewLoadBalancer(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		frontEndTargetGroup, err := lb.NewTargetGroup(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "front_end", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: frontEnd.Arn,
    /// 			Port:            pulumi.Int(443),
    /// 			Protocol:        pulumi.String("HTTPS"),
    /// 			SslPolicy:       pulumi.String("ELBSecurityPolicy-2016-08"),
    /// 			CertificateArn:  pulumi.String("arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4"),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type:           pulumi.String("forward"),
    /// 					TargetGroupArn: frontEndTargetGroup.Arn,
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.TargetGroup;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var frontEnd = new LoadBalancer("frontEnd");
    /// 
    ///         var frontEndTargetGroup = new TargetGroup("frontEndTargetGroup");
    /// 
    ///         var frontEndListener = new Listener("frontEndListener", ListenerArgs.builder()
    ///             .loadBalancerArn(frontEnd.arn())
    ///             .port("443")
    ///             .protocol("HTTPS")
    ///             .sslPolicy("ELBSecurityPolicy-2016-08")
    ///             .certificateArn("arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4")
    ///             .defaultActions(ListenerDefaultActionArgs.builder()
    ///                 .type("forward")
    ///                 .targetGroupArn(frontEndTargetGroup.arn())
    ///                 .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   frontEnd:
    ///     type: aws:lb:LoadBalancer
    ///     name: front_end
    ///   frontEndTargetGroup:
    ///     type: aws:lb:TargetGroup
    ///     name: front_end
    ///   frontEndListener:
    ///     type: aws:lb:Listener
    ///     name: front_end
    ///     properties:
    ///       loadBalancerArn: ${frontEnd.arn}
    ///       port: '443'
    ///       protocol: HTTPS
    ///       sslPolicy: ELBSecurityPolicy-2016-08
    ///       certificateArn: arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4
    ///       defaultActions:
    ///         - type: forward
    ///           targetGroupArn: ${frontEndTargetGroup.arn}
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// To a NLB:
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const frontEnd = new aws.lb.Listener("front_end", {
    ///     loadBalancerArn: frontEndAwsLb.arn,
    ///     port: 443,
    ///     protocol: "TLS",
    ///     certificateArn: "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
    ///     alpnPolicy: "HTTP2Preferred",
    ///     defaultActions: [{
    ///         type: "forward",
    ///         targetGroupArn: frontEndAwsLbTargetGroup.arn,
    ///     }],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// front_end = aws.lb.Listener("front_end",
    ///     load_balancer_arn=front_end_aws_lb["arn"],
    ///     port=443,
    ///     protocol="TLS",
    ///     certificate_arn="arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
    ///     alpn_policy="HTTP2Preferred",
    ///     default_actions=[aws.lb.ListenerDefaultActionArgs(
    ///         type="forward",
    ///         target_group_arn=front_end_aws_lb_target_group["arn"],
    ///     )])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var frontEnd = new Aws.LB.Listener("front_end", new()
    ///     {
    ///         LoadBalancerArn = frontEndAwsLb.Arn,
    ///         Port = 443,
    ///         Protocol = "TLS",
    ///         CertificateArn = "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
    ///         AlpnPolicy = "HTTP2Preferred",
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "forward",
    ///                 TargetGroupArn = frontEndAwsLbTargetGroup.Arn,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		_, err := lb.NewListener(ctx, "front_end", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: pulumi.Any(frontEndAwsLb.Arn),
    /// 			Port:            pulumi.Int(443),
    /// 			Protocol:        pulumi.String("TLS"),
    /// 			CertificateArn:  pulumi.String("arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4"),
    /// 			AlpnPolicy:      pulumi.String("HTTP2Preferred"),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type:           pulumi.String("forward"),
    /// 					TargetGroupArn: pulumi.Any(frontEndAwsLbTargetGroup.Arn),
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var frontEnd = new Listener("frontEnd", ListenerArgs.builder()
    ///             .loadBalancerArn(frontEndAwsLb.arn())
    ///             .port("443")
    ///             .protocol("TLS")
    ///             .certificateArn("arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4")
    ///             .alpnPolicy("HTTP2Preferred")
    ///             .defaultActions(ListenerDefaultActionArgs.builder()
    ///                 .type("forward")
    ///                 .targetGroupArn(frontEndAwsLbTargetGroup.arn())
    ///                 .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   frontEnd:
    ///     type: aws:lb:Listener
    ///     name: front_end
    ///     properties:
    ///       loadBalancerArn: ${frontEndAwsLb.arn}
    ///       port: '443'
    ///       protocol: TLS
    ///       certificateArn: arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4
    ///       alpnPolicy: HTTP2Preferred
    ///       defaultActions:
    ///         - type: forward
    ///           targetGroupArn: ${frontEndAwsLbTargetGroup.arn}
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Redirect Action
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const frontEnd = new aws.lb.LoadBalancer("front_end", {});
    /// const frontEndListener = new aws.lb.Listener("front_end", {
    ///     loadBalancerArn: frontEnd.arn,
    ///     port: 80,
    ///     protocol: "HTTP",
    ///     defaultActions: [{
    ///         type: "redirect",
    ///         redirect: {
    ///             port: "443",
    ///             protocol: "HTTPS",
    ///             statusCode: "HTTP_301",
    ///         },
    ///     }],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// front_end = aws.lb.LoadBalancer("front_end")
    /// front_end_listener = aws.lb.Listener("front_end",
    ///     load_balancer_arn=front_end.arn,
    ///     port=80,
    ///     protocol="HTTP",
    ///     default_actions=[aws.lb.ListenerDefaultActionArgs(
    ///         type="redirect",
    ///         redirect=aws.lb.ListenerDefaultActionRedirectArgs(
    ///             port="443",
    ///             protocol="HTTPS",
    ///             status_code="HTTP_301",
    ///         ),
    ///     )])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var frontEnd = new Aws.LB.LoadBalancer("front_end");
    /// 
    ///     var frontEndListener = new Aws.LB.Listener("front_end", new()
    ///     {
    ///         LoadBalancerArn = frontEnd.Arn,
    ///         Port = 80,
    ///         Protocol = "HTTP",
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "redirect",
    ///                 Redirect = new Aws.LB.Inputs.ListenerDefaultActionRedirectArgs
    ///                 {
    ///                     Port = "443",
    ///                     Protocol = "HTTPS",
    ///                     StatusCode = "HTTP_301",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		frontEnd, err := lb.NewLoadBalancer(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "front_end", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: frontEnd.Arn,
    /// 			Port:            pulumi.Int(80),
    /// 			Protocol:        pulumi.String("HTTP"),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type: pulumi.String("redirect"),
    /// 					Redirect: &amp;lb.ListenerDefaultActionRedirectArgs{
    /// 						Port:       pulumi.String("443"),
    /// 						Protocol:   pulumi.String("HTTPS"),
    /// 						StatusCode: pulumi.String("HTTP_301"),
    /// 					},
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionRedirectArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var frontEnd = new LoadBalancer("frontEnd");
    /// 
    ///         var frontEndListener = new Listener("frontEndListener", ListenerArgs.builder()
    ///             .loadBalancerArn(frontEnd.arn())
    ///             .port("80")
    ///             .protocol("HTTP")
    ///             .defaultActions(ListenerDefaultActionArgs.builder()
    ///                 .type("redirect")
    ///                 .redirect(ListenerDefaultActionRedirectArgs.builder()
    ///                     .port("443")
    ///                     .protocol("HTTPS")
    ///                     .statusCode("HTTP_301")
    ///                     .build())
    ///                 .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   frontEnd:
    ///     type: aws:lb:LoadBalancer
    ///     name: front_end
    ///   frontEndListener:
    ///     type: aws:lb:Listener
    ///     name: front_end
    ///     properties:
    ///       loadBalancerArn: ${frontEnd.arn}
    ///       port: '80'
    ///       protocol: HTTP
    ///       defaultActions:
    ///         - type: redirect
    ///           redirect:
    ///             port: '443'
    ///             protocol: HTTPS
    ///             statusCode: HTTP_301
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Fixed-response Action
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const frontEnd = new aws.lb.LoadBalancer("front_end", {});
    /// const frontEndListener = new aws.lb.Listener("front_end", {
    ///     loadBalancerArn: frontEnd.arn,
    ///     port: 80,
    ///     protocol: "HTTP",
    ///     defaultActions: [{
    ///         type: "fixed-response",
    ///         fixedResponse: {
    ///             contentType: "text/plain",
    ///             messageBody: "Fixed response content",
    ///             statusCode: "200",
    ///         },
    ///     }],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// front_end = aws.lb.LoadBalancer("front_end")
    /// front_end_listener = aws.lb.Listener("front_end",
    ///     load_balancer_arn=front_end.arn,
    ///     port=80,
    ///     protocol="HTTP",
    ///     default_actions=[aws.lb.ListenerDefaultActionArgs(
    ///         type="fixed-response",
    ///         fixed_response=aws.lb.ListenerDefaultActionFixedResponseArgs(
    ///             content_type="text/plain",
    ///             message_body="Fixed response content",
    ///             status_code="200",
    ///         ),
    ///     )])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var frontEnd = new Aws.LB.LoadBalancer("front_end");
    /// 
    ///     var frontEndListener = new Aws.LB.Listener("front_end", new()
    ///     {
    ///         LoadBalancerArn = frontEnd.Arn,
    ///         Port = 80,
    ///         Protocol = "HTTP",
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "fixed-response",
    ///                 FixedResponse = new Aws.LB.Inputs.ListenerDefaultActionFixedResponseArgs
    ///                 {
    ///                     ContentType = "text/plain",
    ///                     MessageBody = "Fixed response content",
    ///                     StatusCode = "200",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		frontEnd, err := lb.NewLoadBalancer(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "front_end", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: frontEnd.Arn,
    /// 			Port:            pulumi.Int(80),
    /// 			Protocol:        pulumi.String("HTTP"),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type: pulumi.String("fixed-response"),
    /// 					FixedResponse: &amp;lb.ListenerDefaultActionFixedResponseArgs{
    /// 						ContentType: pulumi.String("text/plain"),
    /// 						MessageBody: pulumi.String("Fixed response content"),
    /// 						StatusCode:  pulumi.String("200"),
    /// 					},
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionFixedResponseArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var frontEnd = new LoadBalancer("frontEnd");
    /// 
    ///         var frontEndListener = new Listener("frontEndListener", ListenerArgs.builder()
    ///             .loadBalancerArn(frontEnd.arn())
    ///             .port("80")
    ///             .protocol("HTTP")
    ///             .defaultActions(ListenerDefaultActionArgs.builder()
    ///                 .type("fixed-response")
    ///                 .fixedResponse(ListenerDefaultActionFixedResponseArgs.builder()
    ///                     .contentType("text/plain")
    ///                     .messageBody("Fixed response content")
    ///                     .statusCode("200")
    ///                     .build())
    ///                 .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   frontEnd:
    ///     type: aws:lb:LoadBalancer
    ///     name: front_end
    ///   frontEndListener:
    ///     type: aws:lb:Listener
    ///     name: front_end
    ///     properties:
    ///       loadBalancerArn: ${frontEnd.arn}
    ///       port: '80'
    ///       protocol: HTTP
    ///       defaultActions:
    ///         - type: fixed-response
    ///           fixedResponse:
    ///             contentType: text/plain
    ///             messageBody: Fixed response content
    ///             statusCode: '200'
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Authenticate-cognito Action
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const frontEnd = new aws.lb.LoadBalancer("front_end", {});
    /// const frontEndTargetGroup = new aws.lb.TargetGroup("front_end", {});
    /// const pool = new aws.cognito.UserPool("pool", {});
    /// const client = new aws.cognito.UserPoolClient("client", {});
    /// const domain = new aws.cognito.UserPoolDomain("domain", {});
    /// const frontEndListener = new aws.lb.Listener("front_end", {
    ///     loadBalancerArn: frontEnd.arn,
    ///     port: 80,
    ///     protocol: "HTTP",
    ///     defaultActions: [
    ///         {
    ///             type: "authenticate-cognito",
    ///             authenticateCognito: {
    ///                 userPoolArn: pool.arn,
    ///                 userPoolClientId: client.id,
    ///                 userPoolDomain: domain.domain,
    ///             },
    ///         },
    ///         {
    ///             type: "forward",
    ///             targetGroupArn: frontEndTargetGroup.arn,
    ///         },
    ///     ],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// front_end = aws.lb.LoadBalancer("front_end")
    /// front_end_target_group = aws.lb.TargetGroup("front_end")
    /// pool = aws.cognito.UserPool("pool")
    /// client = aws.cognito.UserPoolClient("client")
    /// domain = aws.cognito.UserPoolDomain("domain")
    /// front_end_listener = aws.lb.Listener("front_end",
    ///     load_balancer_arn=front_end.arn,
    ///     port=80,
    ///     protocol="HTTP",
    ///     default_actions=[
    ///         aws.lb.ListenerDefaultActionArgs(
    ///             type="authenticate-cognito",
    ///             authenticate_cognito=aws.lb.ListenerDefaultActionAuthenticateCognitoArgs(
    ///                 user_pool_arn=pool.arn,
    ///                 user_pool_client_id=client.id,
    ///                 user_pool_domain=domain.domain,
    ///             ),
    ///         ),
    ///         aws.lb.ListenerDefaultActionArgs(
    ///             type="forward",
    ///             target_group_arn=front_end_target_group.arn,
    ///         ),
    ///     ])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var frontEnd = new Aws.LB.LoadBalancer("front_end");
    /// 
    ///     var frontEndTargetGroup = new Aws.LB.TargetGroup("front_end");
    /// 
    ///     var pool = new Aws.Cognito.UserPool("pool");
    /// 
    ///     var client = new Aws.Cognito.UserPoolClient("client");
    /// 
    ///     var domain = new Aws.Cognito.UserPoolDomain("domain");
    /// 
    ///     var frontEndListener = new Aws.LB.Listener("front_end", new()
    ///     {
    ///         LoadBalancerArn = frontEnd.Arn,
    ///         Port = 80,
    ///         Protocol = "HTTP",
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "authenticate-cognito",
    ///                 AuthenticateCognito = new Aws.LB.Inputs.ListenerDefaultActionAuthenticateCognitoArgs
    ///                 {
    ///                     UserPoolArn = pool.Arn,
    ///                     UserPoolClientId = client.Id,
    ///                     UserPoolDomain = domain.Domain,
    ///                 },
    ///             },
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "forward",
    ///                 TargetGroupArn = frontEndTargetGroup.Arn,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cognito"
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		frontEnd, err := lb.NewLoadBalancer(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		frontEndTargetGroup, err := lb.NewTargetGroup(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		pool, err := cognito.NewUserPool(ctx, "pool", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		client, err := cognito.NewUserPoolClient(ctx, "client", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		domain, err := cognito.NewUserPoolDomain(ctx, "domain", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "front_end", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: frontEnd.Arn,
    /// 			Port:            pulumi.Int(80),
    /// 			Protocol:        pulumi.String("HTTP"),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type: pulumi.String("authenticate-cognito"),
    /// 					AuthenticateCognito: &amp;lb.ListenerDefaultActionAuthenticateCognitoArgs{
    /// 						UserPoolArn:      pool.Arn,
    /// 						UserPoolClientId: client.ID(),
    /// 						UserPoolDomain:   domain.Domain,
    /// 					},
    /// 				},
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type:           pulumi.String("forward"),
    /// 					TargetGroupArn: frontEndTargetGroup.Arn,
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.TargetGroup;
    /// import com.pulumi.aws.cognito.UserPool;
    /// import com.pulumi.aws.cognito.UserPoolClient;
    /// import com.pulumi.aws.cognito.UserPoolDomain;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionAuthenticateCognitoArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var frontEnd = new LoadBalancer("frontEnd");
    /// 
    ///         var frontEndTargetGroup = new TargetGroup("frontEndTargetGroup");
    /// 
    ///         var pool = new UserPool("pool");
    /// 
    ///         var client = new UserPoolClient("client");
    /// 
    ///         var domain = new UserPoolDomain("domain");
    /// 
    ///         var frontEndListener = new Listener("frontEndListener", ListenerArgs.builder()
    ///             .loadBalancerArn(frontEnd.arn())
    ///             .port("80")
    ///             .protocol("HTTP")
    ///             .defaultActions(            
    ///                 ListenerDefaultActionArgs.builder()
    ///                     .type("authenticate-cognito")
    ///                     .authenticateCognito(ListenerDefaultActionAuthenticateCognitoArgs.builder()
    ///                         .userPoolArn(pool.arn())
    ///                         .userPoolClientId(client.id())
    ///                         .userPoolDomain(domain.domain())
    ///                         .build())
    ///                     .build(),
    ///                 ListenerDefaultActionArgs.builder()
    ///                     .type("forward")
    ///                     .targetGroupArn(frontEndTargetGroup.arn())
    ///                     .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   frontEnd:
    ///     type: aws:lb:LoadBalancer
    ///     name: front_end
    ///   frontEndTargetGroup:
    ///     type: aws:lb:TargetGroup
    ///     name: front_end
    ///   pool:
    ///     type: aws:cognito:UserPool
    ///   client:
    ///     type: aws:cognito:UserPoolClient
    ///   domain:
    ///     type: aws:cognito:UserPoolDomain
    ///   frontEndListener:
    ///     type: aws:lb:Listener
    ///     name: front_end
    ///     properties:
    ///       loadBalancerArn: ${frontEnd.arn}
    ///       port: '80'
    ///       protocol: HTTP
    ///       defaultActions:
    ///         - type: authenticate-cognito
    ///           authenticateCognito:
    ///             userPoolArn: ${pool.arn}
    ///             userPoolClientId: ${client.id}
    ///             userPoolDomain: ${domain.domain}
    ///         - type: forward
    ///           targetGroupArn: ${frontEndTargetGroup.arn}
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Authenticate-OIDC Action
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const frontEnd = new aws.lb.LoadBalancer("front_end", {});
    /// const frontEndTargetGroup = new aws.lb.TargetGroup("front_end", {});
    /// const frontEndListener = new aws.lb.Listener("front_end", {
    ///     loadBalancerArn: frontEnd.arn,
    ///     port: 80,
    ///     protocol: "HTTP",
    ///     defaultActions: [
    ///         {
    ///             type: "authenticate-oidc",
    ///             authenticateOidc: {
    ///                 authorizationEndpoint: "https://example.com/authorization_endpoint",
    ///                 clientId: "client_id",
    ///                 clientSecret: "client_secret",
    ///                 issuer: "https://example.com",
    ///                 tokenEndpoint: "https://example.com/token_endpoint",
    ///                 userInfoEndpoint: "https://example.com/user_info_endpoint",
    ///             },
    ///         },
    ///         {
    ///             type: "forward",
    ///             targetGroupArn: frontEndTargetGroup.arn,
    ///         },
    ///     ],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// front_end = aws.lb.LoadBalancer("front_end")
    /// front_end_target_group = aws.lb.TargetGroup("front_end")
    /// front_end_listener = aws.lb.Listener("front_end",
    ///     load_balancer_arn=front_end.arn,
    ///     port=80,
    ///     protocol="HTTP",
    ///     default_actions=[
    ///         aws.lb.ListenerDefaultActionArgs(
    ///             type="authenticate-oidc",
    ///             authenticate_oidc=aws.lb.ListenerDefaultActionAuthenticateOidcArgs(
    ///                 authorization_endpoint="https://example.com/authorization_endpoint",
    ///                 client_id="client_id",
    ///                 client_secret="client_secret",
    ///                 issuer="https://example.com",
    ///                 token_endpoint="https://example.com/token_endpoint",
    ///                 user_info_endpoint="https://example.com/user_info_endpoint",
    ///             ),
    ///         ),
    ///         aws.lb.ListenerDefaultActionArgs(
    ///             type="forward",
    ///             target_group_arn=front_end_target_group.arn,
    ///         ),
    ///     ])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var frontEnd = new Aws.LB.LoadBalancer("front_end");
    /// 
    ///     var frontEndTargetGroup = new Aws.LB.TargetGroup("front_end");
    /// 
    ///     var frontEndListener = new Aws.LB.Listener("front_end", new()
    ///     {
    ///         LoadBalancerArn = frontEnd.Arn,
    ///         Port = 80,
    ///         Protocol = "HTTP",
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "authenticate-oidc",
    ///                 AuthenticateOidc = new Aws.LB.Inputs.ListenerDefaultActionAuthenticateOidcArgs
    ///                 {
    ///                     AuthorizationEndpoint = "https://example.com/authorization_endpoint",
    ///                     ClientId = "client_id",
    ///                     ClientSecret = "client_secret",
    ///                     Issuer = "https://example.com",
    ///                     TokenEndpoint = "https://example.com/token_endpoint",
    ///                     UserInfoEndpoint = "https://example.com/user_info_endpoint",
    ///                 },
    ///             },
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 Type = "forward",
    ///                 TargetGroupArn = frontEndTargetGroup.Arn,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		frontEnd, err := lb.NewLoadBalancer(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		frontEndTargetGroup, err := lb.NewTargetGroup(ctx, "front_end", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "front_end", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: frontEnd.Arn,
    /// 			Port:            pulumi.Int(80),
    /// 			Protocol:        pulumi.String("HTTP"),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type: pulumi.String("authenticate-oidc"),
    /// 					AuthenticateOidc: &amp;lb.ListenerDefaultActionAuthenticateOidcArgs{
    /// 						AuthorizationEndpoint: pulumi.String("https://example.com/authorization_endpoint"),
    /// 						ClientId:              pulumi.String("client_id"),
    /// 						ClientSecret:          pulumi.String("client_secret"),
    /// 						Issuer:                pulumi.String("https://example.com"),
    /// 						TokenEndpoint:         pulumi.String("https://example.com/token_endpoint"),
    /// 						UserInfoEndpoint:      pulumi.String("https://example.com/user_info_endpoint"),
    /// 					},
    /// 				},
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					Type:           pulumi.String("forward"),
    /// 					TargetGroupArn: frontEndTargetGroup.Arn,
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.TargetGroup;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionAuthenticateOidcArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var frontEnd = new LoadBalancer("frontEnd");
    /// 
    ///         var frontEndTargetGroup = new TargetGroup("frontEndTargetGroup");
    /// 
    ///         var frontEndListener = new Listener("frontEndListener", ListenerArgs.builder()
    ///             .loadBalancerArn(frontEnd.arn())
    ///             .port("80")
    ///             .protocol("HTTP")
    ///             .defaultActions(            
    ///                 ListenerDefaultActionArgs.builder()
    ///                     .type("authenticate-oidc")
    ///                     .authenticateOidc(ListenerDefaultActionAuthenticateOidcArgs.builder()
    ///                         .authorizationEndpoint("https://example.com/authorization_endpoint")
    ///                         .clientId("client_id")
    ///                         .clientSecret("client_secret")
    ///                         .issuer("https://example.com")
    ///                         .tokenEndpoint("https://example.com/token_endpoint")
    ///                         .userInfoEndpoint("https://example.com/user_info_endpoint")
    ///                         .build())
    ///                     .build(),
    ///                 ListenerDefaultActionArgs.builder()
    ///                     .type("forward")
    ///                     .targetGroupArn(frontEndTargetGroup.arn())
    ///                     .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   frontEnd:
    ///     type: aws:lb:LoadBalancer
    ///     name: front_end
    ///   frontEndTargetGroup:
    ///     type: aws:lb:TargetGroup
    ///     name: front_end
    ///   frontEndListener:
    ///     type: aws:lb:Listener
    ///     name: front_end
    ///     properties:
    ///       loadBalancerArn: ${frontEnd.arn}
    ///       port: '80'
    ///       protocol: HTTP
    ///       defaultActions:
    ///         - type: authenticate-oidc
    ///           authenticateOidc:
    ///             authorizationEndpoint: https://example.com/authorization_endpoint
    ///             clientId: client_id
    ///             clientSecret: client_secret
    ///             issuer: https://example.com
    ///             tokenEndpoint: https://example.com/token_endpoint
    ///             userInfoEndpoint: https://example.com/user_info_endpoint
    ///         - type: forward
    ///           targetGroupArn: ${frontEndTargetGroup.arn}
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Gateway Load Balancer Listener
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const example = new aws.lb.LoadBalancer("example", {
    ///     loadBalancerType: "gateway",
    ///     name: "example",
    ///     subnetMappings: [{
    ///         subnetId: exampleAwsSubnet.id,
    ///     }],
    /// });
    /// const exampleTargetGroup = new aws.lb.TargetGroup("example", {
    ///     name: "example",
    ///     port: 6081,
    ///     protocol: "GENEVE",
    ///     vpcId: exampleAwsVpc.id,
    ///     healthCheck: {
    ///         port: "80",
    ///         protocol: "HTTP",
    ///     },
    /// });
    /// const exampleListener = new aws.lb.Listener("example", {
    ///     loadBalancerArn: example.id,
    ///     defaultActions: [{
    ///         targetGroupArn: exampleTargetGroup.id,
    ///         type: "forward",
    ///     }],
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// example = aws.lb.LoadBalancer("example",
    ///     load_balancer_type="gateway",
    ///     name="example",
    ///     subnet_mappings=[aws.lb.LoadBalancerSubnetMappingArgs(
    ///         subnet_id=example_aws_subnet["id"],
    ///     )])
    /// example_target_group = aws.lb.TargetGroup("example",
    ///     name="example",
    ///     port=6081,
    ///     protocol="GENEVE",
    ///     vpc_id=example_aws_vpc["id"],
    ///     health_check=aws.lb.TargetGroupHealthCheckArgs(
    ///         port="80",
    ///         protocol="HTTP",
    ///     ))
    /// example_listener = aws.lb.Listener("example",
    ///     load_balancer_arn=example.id,
    ///     default_actions=[aws.lb.ListenerDefaultActionArgs(
    ///         target_group_arn=example_target_group.id,
    ///         type="forward",
    ///     )])
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.LB.LoadBalancer("example", new()
    ///     {
    ///         LoadBalancerType = "gateway",
    ///         Name = "example",
    ///         SubnetMappings = new[]
    ///         {
    ///             new Aws.LB.Inputs.LoadBalancerSubnetMappingArgs
    ///             {
    ///                 SubnetId = exampleAwsSubnet.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleTargetGroup = new Aws.LB.TargetGroup("example", new()
    ///     {
    ///         Name = "example",
    ///         Port = 6081,
    ///         Protocol = "GENEVE",
    ///         VpcId = exampleAwsVpc.Id,
    ///         HealthCheck = new Aws.LB.Inputs.TargetGroupHealthCheckArgs
    ///         {
    ///             Port = "80",
    ///             Protocol = "HTTP",
    ///         },
    ///     });
    /// 
    ///     var exampleListener = new Aws.LB.Listener("example", new()
    ///     {
    ///         LoadBalancerArn = example.Id,
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 TargetGroupArn = exampleTargetGroup.Id,
    ///                 Type = "forward",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		example, err := lb.NewLoadBalancer(ctx, "example", &amp;lb.LoadBalancerArgs{
    /// 			LoadBalancerType: pulumi.String("gateway"),
    /// 			Name:             pulumi.String("example"),
    /// 			SubnetMappings: lb.LoadBalancerSubnetMappingArray{
    /// 				&amp;lb.LoadBalancerSubnetMappingArgs{
    /// 					SubnetId: pulumi.Any(exampleAwsSubnet.Id),
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		exampleTargetGroup, err := lb.NewTargetGroup(ctx, "example", &amp;lb.TargetGroupArgs{
    /// 			Name:     pulumi.String("example"),
    /// 			Port:     pulumi.Int(6081),
    /// 			Protocol: pulumi.String("GENEVE"),
    /// 			VpcId:    pulumi.Any(exampleAwsVpc.Id),
    /// 			HealthCheck: &amp;lb.TargetGroupHealthCheckArgs{
    /// 				Port:     pulumi.String("80"),
    /// 				Protocol: pulumi.String("HTTP"),
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "example", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: example.ID(),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					TargetGroupArn: exampleTargetGroup.ID(),
    /// 					Type:           pulumi.String("forward"),
    /// 				},
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.LoadBalancerArgs;
    /// import com.pulumi.aws.lb.inputs.LoadBalancerSubnetMappingArgs;
    /// import com.pulumi.aws.lb.TargetGroup;
    /// import com.pulumi.aws.lb.TargetGroupArgs;
    /// import com.pulumi.aws.lb.inputs.TargetGroupHealthCheckArgs;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var example = new LoadBalancer("example", LoadBalancerArgs.builder()
    ///             .loadBalancerType("gateway")
    ///             .name("example")
    ///             .subnetMappings(LoadBalancerSubnetMappingArgs.builder()
    ///                 .subnetId(exampleAwsSubnet.id())
    ///                 .build())
    ///             .build());
    /// 
    ///         var exampleTargetGroup = new TargetGroup("exampleTargetGroup", TargetGroupArgs.builder()
    ///             .name("example")
    ///             .port(6081)
    ///             .protocol("GENEVE")
    ///             .vpcId(exampleAwsVpc.id())
    ///             .healthCheck(TargetGroupHealthCheckArgs.builder()
    ///                 .port(80)
    ///                 .protocol("HTTP")
    ///                 .build())
    ///             .build());
    /// 
    ///         var exampleListener = new Listener("exampleListener", ListenerArgs.builder()
    ///             .loadBalancerArn(example.id())
    ///             .defaultActions(ListenerDefaultActionArgs.builder()
    ///                 .targetGroupArn(exampleTargetGroup.id())
    ///                 .type("forward")
    ///                 .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   example:
    ///     type: aws:lb:LoadBalancer
    ///     properties:
    ///       loadBalancerType: gateway
    ///       name: example
    ///       subnetMappings:
    ///         - subnetId: ${exampleAwsSubnet.id}
    ///   exampleTargetGroup:
    ///     type: aws:lb:TargetGroup
    ///     name: example
    ///     properties:
    ///       name: example
    ///       port: 6081
    ///       protocol: GENEVE
    ///       vpcId: ${exampleAwsVpc.id}
    ///       healthCheck:
    ///         port: 80
    ///         protocol: HTTP
    ///   exampleListener:
    ///     type: aws:lb:Listener
    ///     name: example
    ///     properties:
    ///       loadBalancerArn: ${example.id}
    ///       defaultActions:
    ///         - targetGroupArn: ${exampleTargetGroup.id}
    ///           type: forward
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Mutual TLS Authentication
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```typescript
    /// import * as pulumi from "@pulumi/pulumi";
    /// import * as aws from "@pulumi/aws";
    /// 
    /// const example = new aws.lb.LoadBalancer("example", {loadBalancerType: "application"});
    /// const exampleTargetGroup = new aws.lb.TargetGroup("example", {});
    /// const exampleListener = new aws.lb.Listener("example", {
    ///     loadBalancerArn: example.id,
    ///     defaultActions: [{
    ///         targetGroupArn: exampleTargetGroup.id,
    ///         type: "forward",
    ///     }],
    ///     mutualAuthentication: {
    ///         mode: "verify",
    ///         trustStoreArn: "...",
    ///     },
    /// });
    /// ```
    /// ```python
    /// import pulumi
    /// import pulumi_aws as aws
    /// 
    /// example = aws.lb.LoadBalancer("example", load_balancer_type="application")
    /// example_target_group = aws.lb.TargetGroup("example")
    /// example_listener = aws.lb.Listener("example",
    ///     load_balancer_arn=example.id,
    ///     default_actions=[aws.lb.ListenerDefaultActionArgs(
    ///         target_group_arn=example_target_group.id,
    ///         type="forward",
    ///     )],
    ///     mutual_authentication=aws.lb.ListenerMutualAuthenticationArgs(
    ///         mode="verify",
    ///         trust_store_arn="...",
    ///     ))
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.LB.LoadBalancer("example", new()
    ///     {
    ///         LoadBalancerType = "application",
    ///     });
    /// 
    ///     var exampleTargetGroup = new Aws.LB.TargetGroup("example");
    /// 
    ///     var exampleListener = new Aws.LB.Listener("example", new()
    ///     {
    ///         LoadBalancerArn = example.Id,
    ///         DefaultActions = new[]
    ///         {
    ///             new Aws.LB.Inputs.ListenerDefaultActionArgs
    ///             {
    ///                 TargetGroupArn = exampleTargetGroup.Id,
    ///                 Type = "forward",
    ///             },
    ///         },
    ///         MutualAuthentication = new Aws.LB.Inputs.ListenerMutualAuthenticationArgs
    ///         {
    ///             Mode = "verify",
    ///             TrustStoreArn = "...",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```go
    /// package main
    /// 
    /// import (
    /// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
    /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
    /// )
    /// 
    /// func main() {
    /// 	pulumi.Run(func(ctx *pulumi.Context) error {
    /// 		example, err := lb.NewLoadBalancer(ctx, "example", &amp;lb.LoadBalancerArgs{
    /// 			LoadBalancerType: pulumi.String("application"),
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		exampleTargetGroup, err := lb.NewTargetGroup(ctx, "example", nil)
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		_, err = lb.NewListener(ctx, "example", &amp;lb.ListenerArgs{
    /// 			LoadBalancerArn: example.ID(),
    /// 			DefaultActions: lb.ListenerDefaultActionArray{
    /// 				&amp;lb.ListenerDefaultActionArgs{
    /// 					TargetGroupArn: exampleTargetGroup.ID(),
    /// 					Type:           pulumi.String("forward"),
    /// 				},
    /// 			},
    /// 			MutualAuthentication: &amp;lb.ListenerMutualAuthenticationArgs{
    /// 				Mode:          pulumi.String("verify"),
    /// 				TrustStoreArn: pulumi.String("..."),
    /// 			},
    /// 		})
    /// 		if err != nil {
    /// 			return err
    /// 		}
    /// 		return nil
    /// 	})
    /// }
    /// ```
    /// ```java
    /// package generated_program;
    /// 
    /// import com.pulumi.Context;
    /// import com.pulumi.Pulumi;
    /// import com.pulumi.core.Output;
    /// import com.pulumi.aws.lb.LoadBalancer;
    /// import com.pulumi.aws.lb.LoadBalancerArgs;
    /// import com.pulumi.aws.lb.TargetGroup;
    /// import com.pulumi.aws.lb.Listener;
    /// import com.pulumi.aws.lb.ListenerArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerDefaultActionArgs;
    /// import com.pulumi.aws.lb.inputs.ListenerMutualAuthenticationArgs;
    /// import java.util.List;
    /// import java.util.ArrayList;
    /// import java.util.Map;
    /// import java.io.File;
    /// import java.nio.file.Files;
    /// import java.nio.file.Paths;
    /// 
    /// public class App {
    ///     public static void main(String[] args) {
    ///         Pulumi.run(App::stack);
    ///     }
    /// 
    ///     public static void stack(Context ctx) {
    ///         var example = new LoadBalancer("example", LoadBalancerArgs.builder()
    ///             .loadBalancerType("application")
    ///             .build());
    /// 
    ///         var exampleTargetGroup = new TargetGroup("exampleTargetGroup");
    /// 
    ///         var exampleListener = new Listener("exampleListener", ListenerArgs.builder()
    ///             .loadBalancerArn(example.id())
    ///             .defaultActions(ListenerDefaultActionArgs.builder()
    ///                 .targetGroupArn(exampleTargetGroup.id())
    ///                 .type("forward")
    ///                 .build())
    ///             .mutualAuthentication(ListenerMutualAuthenticationArgs.builder()
    ///                 .mode("verify")
    ///                 .trustStoreArn("...")
    ///                 .build())
    ///             .build());
    /// 
    ///     }
    /// }
    /// ```
    /// ```yaml
    /// resources:
    ///   example:
    ///     type: aws:lb:LoadBalancer
    ///     properties:
    ///       loadBalancerType: application
    ///   exampleTargetGroup:
    ///     type: aws:lb:TargetGroup
    ///     name: example
    ///   exampleListener:
    ///     type: aws:lb:Listener
    ///     name: example
    ///     properties:
    ///       loadBalancerArn: ${example.id}
    ///       defaultActions:
    ///         - targetGroupArn: ${exampleTargetGroup.id}
    ///           type: forward
    ///       mutualAuthentication:
    ///         mode: verify
    ///         trustStoreArn: '...'
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import listeners using their ARN. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lb/listener:Listener front_end arn:aws:elasticloadbalancing:us-west-2:187416307283:listener/app/front-end-alb/8e4497da625e2d8a/9ab28ade35828f96
    /// ```
    /// </summary>
    public sealed class ListenerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Application-Layer Protocol Negotiation (ALPN) policy. Can be set if `protocol` is `TLS`. Valid values are `HTTP1Only`, `HTTP2Only`, `HTTP2Optional`, `HTTP2Preferred`, and `None`.
        /// </summary>
        [Input("alpnPolicy")]
        public Input<string>? AlpnPolicy { get; set; }

        /// <summary>
        /// ARN of the default SSL server certificate. Exactly one certificate is required if the protocol is HTTPS. For adding additional SSL certificates, see the `aws.lb.ListenerCertificate` resource.
        /// </summary>
        [Input("certificateArn")]
        public Input<string>? CertificateArn { get; set; }

        [Input("defaultActions")]
        private InputList<Pulumi.Aws.LB.Inputs.ListenerDefaultActionArgs>? _defaultActions;

        /// <summary>
        /// Configuration block for default actions. Detailed below.
        /// </summary>
        public InputList<Pulumi.Aws.LB.Inputs.ListenerDefaultActionArgs> DefaultActions
        {
            get => _defaultActions ?? (_defaultActions = new InputList<Pulumi.Aws.LB.Inputs.ListenerDefaultActionArgs>());
            set => _defaultActions = value;
        }

        /// <summary>
        /// The mutual authentication configuration information. Detailed below.
        /// </summary>
        [Input("mutualAuthentication")]
        public Input<Pulumi.Aws.LB.Inputs.ListenerMutualAuthenticationArgs>? MutualAuthentication { get; set; }

        /// <summary>
        /// Port on which the load balancer is listening. Not valid for Gateway Load Balancers.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Protocol for connections from clients to the load balancer. For Application Load Balancers, valid values are `HTTP` and `HTTPS`, with a default of `HTTP`. For Network Load Balancers, valid values are `TCP`, `TLS`, `UDP`, and `TCP_UDP`. Not valid to use `UDP` or `TCP_UDP` if dual-stack mode is enabled. Not valid for Gateway Load Balancers.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Name of the SSL Policy for the listener. Required if `protocol` is `HTTPS` or `TLS`.
        /// </summary>
        [Input("sslPolicy")]
        public Input<string>? SslPolicy { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// &gt; **NOTE::** Please note that listeners that are attached to Application Load Balancers must use either `HTTP` or `HTTPS` protocols while listeners that are attached to Network Load Balancers must use the `TCP` protocol.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ListenerArgs()
        {
        }
        public static new ListenerArgs Empty => new ListenerArgs();
    }
}
