// *** WARNING: this file was generated by pulumi-gen-awsx. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Awsx.Ec2.Inputs
{

    /// <summary>
    /// Configuration for a VPC subnet.
    /// </summary>
    public sealed class SubnetSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("cidrBlocks")]
        private List<string>? _cidrBlocks;

        /// <summary>
        /// An optional list of CIDR blocks to assign to the subnet spec for each AZ. If specified, the count must match the number of AZs being used for the VPC, and must also be specified for all other subnet specs.
        /// </summary>
        public List<string> CidrBlocks
        {
            get => _cidrBlocks ?? (_cidrBlocks = new List<string>());
            set => _cidrBlocks = value;
        }

        /// <summary>
        /// The netmask for the subnet's CIDR block. This is optional, the default value is inferred from the `cidrMask`, `cidrBlocks` or based on an even distribution of available space from the VPC's CIDR block after being divided evenly by availability zone.
        /// </summary>
        [Input("cidrMask")]
        public int? CidrMask { get; set; }

        /// <summary>
        /// The subnet's name. Will be templated upon creation.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Optional size of the subnet's CIDR block - the number of hosts. This value must be a power of 2 (e.g. 256, 512, 1024, etc.). This is optional, the default value is inferred from the `cidrMask`, `cidrBlocks` or based on an even distribution of available space from the VPC's CIDR block after being divided evenly by availability zone.
        /// </summary>
        [Input("size")]
        public int? Size { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of subnet.
        /// </summary>
        [Input("type", required: true)]
        public Pulumi.Awsx.Ec2.SubnetType Type { get; set; }

        public SubnetSpecArgs()
        {
        }
        public static new SubnetSpecArgs Empty => new SubnetSpecArgs();
    }
}
