# coding=utf-8
# *** WARNING: this file was generated by pulumi-gen-awsx. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetDefaultVpcResult',
    'AwaitableGetDefaultVpcResult',
    'get_default_vpc',
    'get_default_vpc_output',
]

warnings.warn("""Waiting for https://github.com/pulumi/pulumi/issues/7583. Use the DefaultVpc resource until resolved.""", DeprecationWarning)

@pulumi.output_type
class GetDefaultVpcResult:
    """
    Outputs from the default VPC configuration
    """
    def __init__(__self__, private_subnet_ids=None, public_subnet_ids=None, vpc_id=None):
        if private_subnet_ids and not isinstance(private_subnet_ids, list):
            raise TypeError("Expected argument 'private_subnet_ids' to be a list")
        pulumi.set(__self__, "private_subnet_ids", private_subnet_ids)
        if public_subnet_ids and not isinstance(public_subnet_ids, list):
            raise TypeError("Expected argument 'public_subnet_ids' to be a list")
        pulumi.set(__self__, "public_subnet_ids", public_subnet_ids)
        if vpc_id and not isinstance(vpc_id, str):
            raise TypeError("Expected argument 'vpc_id' to be a str")
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="privateSubnetIds")
    def private_subnet_ids(self) -> Sequence[str]:
        return pulumi.get(self, "private_subnet_ids")

    @property
    @pulumi.getter(name="publicSubnetIds")
    def public_subnet_ids(self) -> Sequence[str]:
        return pulumi.get(self, "public_subnet_ids")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        The VPC ID for the default VPC
        """
        return pulumi.get(self, "vpc_id")


class AwaitableGetDefaultVpcResult(GetDefaultVpcResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDefaultVpcResult(
            private_subnet_ids=self.private_subnet_ids,
            public_subnet_ids=self.public_subnet_ids,
            vpc_id=self.vpc_id)


def get_default_vpc(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDefaultVpcResult:
    """
    [NOT YET IMPLEMENTED] Get the Default VPC for a region.
    """
    pulumi.log.warn("""get_default_vpc is deprecated: Waiting for https://github.com/pulumi/pulumi/issues/7583. Use the DefaultVpc resource until resolved.""")
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('awsx:ec2:getDefaultVpc', __args__, opts=opts, typ=GetDefaultVpcResult).value

    return AwaitableGetDefaultVpcResult(
        private_subnet_ids=pulumi.get(__ret__, 'private_subnet_ids'),
        public_subnet_ids=pulumi.get(__ret__, 'public_subnet_ids'),
        vpc_id=pulumi.get(__ret__, 'vpc_id'))


@_utilities.lift_output_func(get_default_vpc)
def get_default_vpc_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDefaultVpcResult]:
    """
    [NOT YET IMPLEMENTED] Get the Default VPC for a region.
    """
    pulumi.log.warn("""get_default_vpc is deprecated: Waiting for https://github.com/pulumi/pulumi/issues/7583. Use the DefaultVpc resource until resolved.""")
    ...
