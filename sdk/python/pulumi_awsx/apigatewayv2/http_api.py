# coding=utf-8
# *** WARNING: this file was generated by pulumi-gen-awsx. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._inputs import *
import pulumi_aws

__all__ = ['HttpApiArgs', 'HttpApi']

@pulumi.input_type
class HttpApiArgs:
    def __init__(__self__, *,
                 routes: Mapping[str, pulumi.Input['HttpRouteArgs']],
                 api_key_selection_expression: Optional[pulumi.Input[str]] = None,
                 authorizers: Optional[Mapping[str, pulumi.Input['HttpAuthorizerArgs']]] = None,
                 body: Optional[pulumi.Input[str]] = None,
                 cors_configuration: Optional[pulumi.Input['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs']] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 disable_execute_api_endpoint: Optional[pulumi.Input[bool]] = None,
                 domain_mappings: Optional[Mapping[str, pulumi.Input['DomainMappingArgs']]] = None,
                 fail_on_warnings: Optional[pulumi.Input[bool]] = None,
                 integrations: Optional[Mapping[str, pulumi.Input['HttpIntegrationArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 route_selection_expression: Optional[pulumi.Input[str]] = None,
                 stages: Optional[Mapping[str, pulumi.Input['HttpStageArgs']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a HttpApi resource.
        :param Mapping[str, pulumi.Input['HttpRouteArgs']] routes: The routes for the HTTP API.
        :param pulumi.Input[str] api_key_selection_expression: An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).
               Valid values: `$context.authorizer.usageIdentifierKey`, `$request.header.x-api-key`. Defaults to `$request.header.x-api-key`.
               Applicable for WebSocket APIs.
        :param Mapping[str, pulumi.Input['HttpAuthorizerArgs']] authorizers: The authorizers for the HTTP API routes.
        :param pulumi.Input[str] body: An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.
        :param pulumi.Input['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs'] cors_configuration: Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html). Applicable for HTTP APIs.
        :param pulumi.Input[str] description: Description of the API. Must be less than or equal to 1024 characters in length.
        :param pulumi.Input[bool] disable_execute_api_endpoint: Whether clients can invoke the API by using the default `execute-api` endpoint.
               By default, clients can invoke the API with the default `{api_id}.execute-api.{region}.amazonaws.com endpoint`.
               To require that clients use a custom domain name to invoke the API, disable the default endpoint.
        :param Mapping[str, pulumi.Input['DomainMappingArgs']] domain_mappings: The domain names for the HTTP API.
        :param pulumi.Input[bool] fail_on_warnings: Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to `false`. Applicable for HTTP APIs.
        :param Mapping[str, pulumi.Input['HttpIntegrationArgs']] integrations: A map of integrations keyed by name for the HTTP API routes.
        :param pulumi.Input[str] name: Name of the API. Must be less than or equal to 128 characters in length.
        :param pulumi.Input[str] route_selection_expression: The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.
               Defaults to `$request.method $request.path`.
        :param Mapping[str, pulumi.Input['HttpStageArgs']] stages: The deployment stages for the HTTP API.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Map of tags to assign to the API. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        :param pulumi.Input[str] version: Version identifier for the API. Must be between 1 and 64 characters in length.
        """
        pulumi.set(__self__, "routes", routes)
        if api_key_selection_expression is not None:
            pulumi.set(__self__, "api_key_selection_expression", api_key_selection_expression)
        if authorizers is not None:
            pulumi.set(__self__, "authorizers", authorizers)
        if body is not None:
            pulumi.set(__self__, "body", body)
        if cors_configuration is not None:
            pulumi.set(__self__, "cors_configuration", cors_configuration)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if disable_execute_api_endpoint is not None:
            pulumi.set(__self__, "disable_execute_api_endpoint", disable_execute_api_endpoint)
        if domain_mappings is not None:
            pulumi.set(__self__, "domain_mappings", domain_mappings)
        if fail_on_warnings is not None:
            pulumi.set(__self__, "fail_on_warnings", fail_on_warnings)
        if integrations is not None:
            pulumi.set(__self__, "integrations", integrations)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if route_selection_expression is not None:
            pulumi.set(__self__, "route_selection_expression", route_selection_expression)
        if stages is not None:
            pulumi.set(__self__, "stages", stages)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def routes(self) -> Mapping[str, pulumi.Input['HttpRouteArgs']]:
        """
        The routes for the HTTP API.
        """
        return pulumi.get(self, "routes")

    @routes.setter
    def routes(self, value: Mapping[str, pulumi.Input['HttpRouteArgs']]):
        pulumi.set(self, "routes", value)

    @property
    @pulumi.getter(name="apiKeySelectionExpression")
    def api_key_selection_expression(self) -> Optional[pulumi.Input[str]]:
        """
        An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).
        Valid values: `$context.authorizer.usageIdentifierKey`, `$request.header.x-api-key`. Defaults to `$request.header.x-api-key`.
        Applicable for WebSocket APIs.
        """
        return pulumi.get(self, "api_key_selection_expression")

    @api_key_selection_expression.setter
    def api_key_selection_expression(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "api_key_selection_expression", value)

    @property
    @pulumi.getter
    def authorizers(self) -> Optional[Mapping[str, pulumi.Input['HttpAuthorizerArgs']]]:
        """
        The authorizers for the HTTP API routes.
        """
        return pulumi.get(self, "authorizers")

    @authorizers.setter
    def authorizers(self, value: Optional[Mapping[str, pulumi.Input['HttpAuthorizerArgs']]]):
        pulumi.set(self, "authorizers", value)

    @property
    @pulumi.getter
    def body(self) -> Optional[pulumi.Input[str]]:
        """
        An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.
        """
        return pulumi.get(self, "body")

    @body.setter
    def body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "body", value)

    @property
    @pulumi.getter(name="corsConfiguration")
    def cors_configuration(self) -> Optional[pulumi.Input['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs']]:
        """
        Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html). Applicable for HTTP APIs.
        """
        return pulumi.get(self, "cors_configuration")

    @cors_configuration.setter
    def cors_configuration(self, value: Optional[pulumi.Input['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs']]):
        pulumi.set(self, "cors_configuration", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the API. Must be less than or equal to 1024 characters in length.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="disableExecuteApiEndpoint")
    def disable_execute_api_endpoint(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether clients can invoke the API by using the default `execute-api` endpoint.
        By default, clients can invoke the API with the default `{api_id}.execute-api.{region}.amazonaws.com endpoint`.
        To require that clients use a custom domain name to invoke the API, disable the default endpoint.
        """
        return pulumi.get(self, "disable_execute_api_endpoint")

    @disable_execute_api_endpoint.setter
    def disable_execute_api_endpoint(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_execute_api_endpoint", value)

    @property
    @pulumi.getter(name="domainMappings")
    def domain_mappings(self) -> Optional[Mapping[str, pulumi.Input['DomainMappingArgs']]]:
        """
        The domain names for the HTTP API.
        """
        return pulumi.get(self, "domain_mappings")

    @domain_mappings.setter
    def domain_mappings(self, value: Optional[Mapping[str, pulumi.Input['DomainMappingArgs']]]):
        pulumi.set(self, "domain_mappings", value)

    @property
    @pulumi.getter(name="failOnWarnings")
    def fail_on_warnings(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to `false`. Applicable for HTTP APIs.
        """
        return pulumi.get(self, "fail_on_warnings")

    @fail_on_warnings.setter
    def fail_on_warnings(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "fail_on_warnings", value)

    @property
    @pulumi.getter
    def integrations(self) -> Optional[Mapping[str, pulumi.Input['HttpIntegrationArgs']]]:
        """
        A map of integrations keyed by name for the HTTP API routes.
        """
        return pulumi.get(self, "integrations")

    @integrations.setter
    def integrations(self, value: Optional[Mapping[str, pulumi.Input['HttpIntegrationArgs']]]):
        pulumi.set(self, "integrations", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the API. Must be less than or equal to 128 characters in length.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="routeSelectionExpression")
    def route_selection_expression(self) -> Optional[pulumi.Input[str]]:
        """
        The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.
        Defaults to `$request.method $request.path`.
        """
        return pulumi.get(self, "route_selection_expression")

    @route_selection_expression.setter
    def route_selection_expression(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "route_selection_expression", value)

    @property
    @pulumi.getter
    def stages(self) -> Optional[Mapping[str, pulumi.Input['HttpStageArgs']]]:
        """
        The deployment stages for the HTTP API.
        """
        return pulumi.get(self, "stages")

    @stages.setter
    def stages(self, value: Optional[Mapping[str, pulumi.Input['HttpStageArgs']]]):
        pulumi.set(self, "stages", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Map of tags to assign to the API. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        Version identifier for the API. Must be between 1 and 64 characters in length.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


class HttpApi(pulumi.ComponentResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_key_selection_expression: Optional[pulumi.Input[str]] = None,
                 authorizers: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpAuthorizerArgs']]]] = None,
                 body: Optional[pulumi.Input[str]] = None,
                 cors_configuration: Optional[pulumi.Input[pulumi.InputType['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 disable_execute_api_endpoint: Optional[pulumi.Input[bool]] = None,
                 domain_mappings: Optional[Mapping[str, pulumi.Input[pulumi.InputType['DomainMappingArgs']]]] = None,
                 fail_on_warnings: Optional[pulumi.Input[bool]] = None,
                 integrations: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpIntegrationArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 route_selection_expression: Optional[pulumi.Input[str]] = None,
                 routes: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpRouteArgs']]]] = None,
                 stages: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpStageArgs']]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 version: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Creates an HTTP API with associated sub-resources.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] api_key_selection_expression: An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).
               Valid values: `$context.authorizer.usageIdentifierKey`, `$request.header.x-api-key`. Defaults to `$request.header.x-api-key`.
               Applicable for WebSocket APIs.
        :param Mapping[str, pulumi.Input[pulumi.InputType['HttpAuthorizerArgs']]] authorizers: The authorizers for the HTTP API routes.
        :param pulumi.Input[str] body: An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.
        :param pulumi.Input[pulumi.InputType['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs']] cors_configuration: Cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html). Applicable for HTTP APIs.
        :param pulumi.Input[str] description: Description of the API. Must be less than or equal to 1024 characters in length.
        :param pulumi.Input[bool] disable_execute_api_endpoint: Whether clients can invoke the API by using the default `execute-api` endpoint.
               By default, clients can invoke the API with the default `{api_id}.execute-api.{region}.amazonaws.com endpoint`.
               To require that clients use a custom domain name to invoke the API, disable the default endpoint.
        :param Mapping[str, pulumi.Input[pulumi.InputType['DomainMappingArgs']]] domain_mappings: The domain names for the HTTP API.
        :param pulumi.Input[bool] fail_on_warnings: Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to `false`. Applicable for HTTP APIs.
        :param Mapping[str, pulumi.Input[pulumi.InputType['HttpIntegrationArgs']]] integrations: A map of integrations keyed by name for the HTTP API routes.
        :param pulumi.Input[str] name: Name of the API. Must be less than or equal to 128 characters in length.
        :param pulumi.Input[str] route_selection_expression: The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.
               Defaults to `$request.method $request.path`.
        :param Mapping[str, pulumi.Input[pulumi.InputType['HttpRouteArgs']]] routes: The routes for the HTTP API.
        :param Mapping[str, pulumi.Input[pulumi.InputType['HttpStageArgs']]] stages: The deployment stages for the HTTP API.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Map of tags to assign to the API. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        :param pulumi.Input[str] version: Version identifier for the API. Must be between 1 and 64 characters in length.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: HttpApiArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Creates an HTTP API with associated sub-resources.

        :param str resource_name: The name of the resource.
        :param HttpApiArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(HttpApiArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_key_selection_expression: Optional[pulumi.Input[str]] = None,
                 authorizers: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpAuthorizerArgs']]]] = None,
                 body: Optional[pulumi.Input[str]] = None,
                 cors_configuration: Optional[pulumi.Input[pulumi.InputType['pulumi_aws.apigatewayv2.ApiCorsConfigurationArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 disable_execute_api_endpoint: Optional[pulumi.Input[bool]] = None,
                 domain_mappings: Optional[Mapping[str, pulumi.Input[pulumi.InputType['DomainMappingArgs']]]] = None,
                 fail_on_warnings: Optional[pulumi.Input[bool]] = None,
                 integrations: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpIntegrationArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 route_selection_expression: Optional[pulumi.Input[str]] = None,
                 routes: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpRouteArgs']]]] = None,
                 stages: Optional[Mapping[str, pulumi.Input[pulumi.InputType['HttpStageArgs']]]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 version: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is not None:
            raise ValueError('ComponentResource classes do not support opts.id')
        else:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = HttpApiArgs.__new__(HttpApiArgs)

            __props__.__dict__["api_key_selection_expression"] = api_key_selection_expression
            __props__.__dict__["authorizers"] = authorizers
            __props__.__dict__["body"] = body
            __props__.__dict__["cors_configuration"] = cors_configuration
            __props__.__dict__["description"] = description
            __props__.__dict__["disable_execute_api_endpoint"] = disable_execute_api_endpoint
            __props__.__dict__["domain_mappings"] = domain_mappings
            __props__.__dict__["fail_on_warnings"] = fail_on_warnings
            __props__.__dict__["integrations"] = integrations
            __props__.__dict__["name"] = name
            __props__.__dict__["route_selection_expression"] = route_selection_expression
            if routes is None and not opts.urn:
                raise TypeError("Missing required property 'routes'")
            __props__.__dict__["routes"] = routes
            __props__.__dict__["stages"] = stages
            __props__.__dict__["tags"] = tags
            __props__.__dict__["version"] = version
            __props__.__dict__["api"] = None
            __props__.__dict__["api_mappings"] = None
            __props__.__dict__["deployment"] = None
            __props__.__dict__["domain_names"] = None
        super(HttpApi, __self__).__init__(
            'awsx:apigatewayv2:HttpApi',
            resource_name,
            __props__,
            opts,
            remote=True)

    @property
    @pulumi.getter
    def api(self) -> pulumi.Output['pulumi_aws.apigatewayv2.Api']:
        """
        The underlying API resource.
        """
        return pulumi.get(self, "api")

    @property
    @pulumi.getter(name="apiMappings")
    def api_mappings(self) -> pulumi.Output[Optional[Sequence['pulumi_aws.apigatewayv2.ApiMapping']]]:
        """
        The API mappings for the HTTP API.
        """
        return pulumi.get(self, "api_mappings")

    @property
    @pulumi.getter
    def authorizers(self) -> pulumi.Output[Sequence['pulumi_aws.apigatewayv2.Authorizer']]:
        """
        The authorizers for the HTTP API routes. This is a map from authorizer name to the authorizer arguments.
        """
        return pulumi.get(self, "authorizers")

    @property
    @pulumi.getter
    def deployment(self) -> pulumi.Output['pulumi_aws.apigatewayv2.Deployment']:
        """
        The deployment for the HTTP API.
        """
        return pulumi.get(self, "deployment")

    @property
    @pulumi.getter(name="domainNames")
    def domain_names(self) -> pulumi.Output[Sequence['pulumi_aws.apigatewayv2.DomainName']]:
        """
        The domain names for the HTTP API.
        """
        return pulumi.get(self, "domain_names")

    @property
    @pulumi.getter
    def integrations(self) -> pulumi.Output[Sequence['pulumi_aws.apigatewayv2.Integration']]:
        """
        The integrations for the HTTP API routes. This is a map from integration name to the integration arguments.
        """
        return pulumi.get(self, "integrations")

    @property
    @pulumi.getter
    def routes(self) -> pulumi.Output[Sequence['pulumi_aws.apigatewayv2.Route']]:
        """
        The routes for the HTTP API. This is a map from route key (for example `GET /pets`) to route arguments.
        """
        return pulumi.get(self, "routes")

    @property
    @pulumi.getter
    def stages(self) -> pulumi.Output[Sequence['pulumi_aws.apigatewayv2.Stage']]:
        """
        The deployment stages for the HTTP API.
        """
        return pulumi.get(self, "stages")

