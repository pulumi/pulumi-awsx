// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class TaskDefinitionUlimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionUlimitArgs Empty = new TaskDefinitionUlimitArgs();

    @Import(name="hardLimit", required=true)
    private Output<Integer> hardLimit;

    public Output<Integer> hardLimit() {
        return this.hardLimit;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="softLimit", required=true)
    private Output<Integer> softLimit;

    public Output<Integer> softLimit() {
        return this.softLimit;
    }

    private TaskDefinitionUlimitArgs() {}

    private TaskDefinitionUlimitArgs(TaskDefinitionUlimitArgs $) {
        this.hardLimit = $.hardLimit;
        this.name = $.name;
        this.softLimit = $.softLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskDefinitionUlimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskDefinitionUlimitArgs $;

        public Builder() {
            $ = new TaskDefinitionUlimitArgs();
        }

        public Builder(TaskDefinitionUlimitArgs defaults) {
            $ = new TaskDefinitionUlimitArgs(Objects.requireNonNull(defaults));
        }

        public Builder hardLimit(Output<Integer> hardLimit) {
            $.hardLimit = hardLimit;
            return this;
        }

        public Builder hardLimit(Integer hardLimit) {
            return hardLimit(Output.of(hardLimit));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder softLimit(Output<Integer> softLimit) {
            $.softLimit = softLimit;
            return this;
        }

        public Builder softLimit(Integer softLimit) {
            return softLimit(Output.of(softLimit));
        }

        public TaskDefinitionUlimitArgs build() {
            $.hardLimit = Objects.requireNonNull($.hardLimit, "expected parameter 'hardLimit' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.softLimit = Objects.requireNonNull($.softLimit, "expected parameter 'softLimit' to be non-null");
            return $;
        }
    }

}
