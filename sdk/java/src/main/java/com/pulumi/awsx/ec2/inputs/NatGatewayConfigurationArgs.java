// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.ec2.inputs;

import com.pulumi.awsx.ec2.enums.NatGatewayStrategy;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration for NAT Gateways.
 * 
 */
public final class NatGatewayConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NatGatewayConfigurationArgs Empty = new NatGatewayConfigurationArgs();

    /**
     * A list of EIP allocation IDs to assign to the NAT Gateways. Optional. If specified, the number of supplied values must match the chosen strategy (either one, or the number of availability zones).
     * 
     */
    @Import(name="elasticIpAllocationIds")
    private @Nullable List<String> elasticIpAllocationIds;

    /**
     * @return A list of EIP allocation IDs to assign to the NAT Gateways. Optional. If specified, the number of supplied values must match the chosen strategy (either one, or the number of availability zones).
     * 
     */
    public Optional<List<String>> elasticIpAllocationIds() {
        return Optional.ofNullable(this.elasticIpAllocationIds);
    }

    /**
     * The strategy for deploying NAT Gateways.
     * 
     */
    @Import(name="strategy", required=true)
    private NatGatewayStrategy strategy;

    /**
     * @return The strategy for deploying NAT Gateways.
     * 
     */
    public NatGatewayStrategy strategy() {
        return this.strategy;
    }

    private NatGatewayConfigurationArgs() {}

    private NatGatewayConfigurationArgs(NatGatewayConfigurationArgs $) {
        this.elasticIpAllocationIds = $.elasticIpAllocationIds;
        this.strategy = $.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatGatewayConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatGatewayConfigurationArgs $;

        public Builder() {
            $ = new NatGatewayConfigurationArgs();
        }

        public Builder(NatGatewayConfigurationArgs defaults) {
            $ = new NatGatewayConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticIpAllocationIds A list of EIP allocation IDs to assign to the NAT Gateways. Optional. If specified, the number of supplied values must match the chosen strategy (either one, or the number of availability zones).
         * 
         * @return builder
         * 
         */
        public Builder elasticIpAllocationIds(@Nullable List<String> elasticIpAllocationIds) {
            $.elasticIpAllocationIds = elasticIpAllocationIds;
            return this;
        }

        /**
         * @param elasticIpAllocationIds A list of EIP allocation IDs to assign to the NAT Gateways. Optional. If specified, the number of supplied values must match the chosen strategy (either one, or the number of availability zones).
         * 
         * @return builder
         * 
         */
        public Builder elasticIpAllocationIds(String... elasticIpAllocationIds) {
            return elasticIpAllocationIds(List.of(elasticIpAllocationIds));
        }

        /**
         * @param strategy The strategy for deploying NAT Gateways.
         * 
         * @return builder
         * 
         */
        public Builder strategy(NatGatewayStrategy strategy) {
            $.strategy = strategy;
            return this;
        }

        public NatGatewayConfigurationArgs build() {
            $.strategy = Objects.requireNonNull($.strategy, "expected parameter 'strategy' to be non-null");
            return $;
        }
    }

}
