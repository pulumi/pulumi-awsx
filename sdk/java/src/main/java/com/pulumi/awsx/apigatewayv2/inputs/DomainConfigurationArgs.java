// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.apigatewayv2.inputs;

import com.pulumi.aws.apigatewayv2.inputs.DomainNameDomainNameConfigurationArgs;
import com.pulumi.aws.apigatewayv2.inputs.DomainNameMutualTlsAuthenticationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Manages an Amazon API Gateway Version 2 domain name.
 * More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).
 * 
 * &gt; **Note:** This resource establishes ownership of and the TLS settings for
 * a particular domain name. An API stage can be associated with the domain name using the `aws.apigatewayv2.ApiMapping` resource.
 * 
 * ## Example Usage
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.apigatewayv2.DomainName;
 * import com.pulumi.aws.apigatewayv2.DomainNameArgs;
 * import com.pulumi.aws.apigatewayv2.inputs.DomainNameDomainNameConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new DomainName(&#34;example&#34;, DomainNameArgs.builder()        
 *             .domainName(&#34;ws-api.example.com&#34;)
 *             .domainNameConfiguration(DomainNameDomainNameConfigurationArgs.builder()
 *                 .certificateArn(aws_acm_certificate.example().arn())
 *                 .endpointType(&#34;REGIONAL&#34;)
 *                 .securityPolicy(&#34;TLS_1_2&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Associated Route 53 Resource Record
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aws.apigatewayv2.DomainName;
 * import com.pulumi.aws.apigatewayv2.DomainNameArgs;
 * import com.pulumi.aws.apigatewayv2.inputs.DomainNameDomainNameConfigurationArgs;
 * import com.pulumi.aws.route53.Record;
 * import com.pulumi.aws.route53.RecordArgs;
 * import com.pulumi.aws.route53.inputs.RecordAliasArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDomainName = new DomainName(&#34;exampleDomainName&#34;, DomainNameArgs.builder()        
 *             .domainName(&#34;http-api.example.com&#34;)
 *             .domainNameConfiguration(DomainNameDomainNameConfigurationArgs.builder()
 *                 .certificateArn(aws_acm_certificate.example().arn())
 *                 .endpointType(&#34;REGIONAL&#34;)
 *                 .securityPolicy(&#34;TLS_1_2&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleRecord = new Record(&#34;exampleRecord&#34;, RecordArgs.builder()        
 *             .name(exampleDomainName.domainName())
 *             .type(&#34;A&#34;)
 *             .zoneId(aws_route53_zone.example().zone_id())
 *             .aliases(RecordAliasArgs.builder()
 *                 .name(exampleDomainName.domainNameConfiguration().applyValue(domainNameConfiguration -&gt; domainNameConfiguration.targetDomainName()))
 *                 .zoneId(exampleDomainName.domainNameConfiguration().applyValue(domainNameConfiguration -&gt; domainNameConfiguration.hostedZoneId()))
 *                 .evaluateTargetHealth(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Using `pulumi import`, import `aws_apigatewayv2_domain_name` using the domain name. For example:
 * 
 * ```sh
 *  $ pulumi import aws:apigatewayv2/domainName:DomainName example ws-api.example.com
 * ```
 * 
 */
public final class DomainConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainConfigurationArgs Empty = new DomainConfigurationArgs();

    /**
     * Domain name configuration. See below.
     * 
     */
    @Import(name="domainNameConfiguration", required=true)
    private Output<DomainNameDomainNameConfigurationArgs> domainNameConfiguration;

    /**
     * @return Domain name configuration. See below.
     * 
     */
    public Output<DomainNameDomainNameConfigurationArgs> domainNameConfiguration() {
        return this.domainNameConfiguration;
    }

    /**
     * Mutual TLS authentication configuration for the domain name.
     * 
     */
    @Import(name="mutualTlsAuthentication")
    private @Nullable Output<DomainNameMutualTlsAuthenticationArgs> mutualTlsAuthentication;

    /**
     * @return Mutual TLS authentication configuration for the domain name.
     * 
     */
    public Optional<Output<DomainNameMutualTlsAuthenticationArgs>> mutualTlsAuthentication() {
        return Optional.ofNullable(this.mutualTlsAuthentication);
    }

    /**
     * Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DomainConfigurationArgs() {}

    private DomainConfigurationArgs(DomainConfigurationArgs $) {
        this.domainNameConfiguration = $.domainNameConfiguration;
        this.mutualTlsAuthentication = $.mutualTlsAuthentication;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainConfigurationArgs $;

        public Builder() {
            $ = new DomainConfigurationArgs();
        }

        public Builder(DomainConfigurationArgs defaults) {
            $ = new DomainConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainNameConfiguration Domain name configuration. See below.
         * 
         * @return builder
         * 
         */
        public Builder domainNameConfiguration(Output<DomainNameDomainNameConfigurationArgs> domainNameConfiguration) {
            $.domainNameConfiguration = domainNameConfiguration;
            return this;
        }

        /**
         * @param domainNameConfiguration Domain name configuration. See below.
         * 
         * @return builder
         * 
         */
        public Builder domainNameConfiguration(DomainNameDomainNameConfigurationArgs domainNameConfiguration) {
            return domainNameConfiguration(Output.of(domainNameConfiguration));
        }

        /**
         * @param mutualTlsAuthentication Mutual TLS authentication configuration for the domain name.
         * 
         * @return builder
         * 
         */
        public Builder mutualTlsAuthentication(@Nullable Output<DomainNameMutualTlsAuthenticationArgs> mutualTlsAuthentication) {
            $.mutualTlsAuthentication = mutualTlsAuthentication;
            return this;
        }

        /**
         * @param mutualTlsAuthentication Mutual TLS authentication configuration for the domain name.
         * 
         * @return builder
         * 
         */
        public Builder mutualTlsAuthentication(DomainNameMutualTlsAuthenticationArgs mutualTlsAuthentication) {
            return mutualTlsAuthentication(Output.of(mutualTlsAuthentication));
        }

        /**
         * @param tags Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DomainConfigurationArgs build() {
            $.domainNameConfiguration = Objects.requireNonNull($.domainNameConfiguration, "expected parameter 'domainNameConfiguration' to be non-null");
            return $;
        }
    }

}
