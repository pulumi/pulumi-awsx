// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.lb;

import com.pulumi.aws.ec2.Instance;
import com.pulumi.aws.lambda.Function;
import com.pulumi.aws.lb.TargetGroup;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetGroupAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetGroupAttachmentArgs Empty = new TargetGroupAttachmentArgs();

    /**
     * EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    @Import(name="instance")
    private @Nullable Output<Instance> instance;

    /**
     * @return EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    public Optional<Output<Instance>> instance() {
        return Optional.ofNullable(this.instance);
    }

    /**
     * ID of an EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return ID of an EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    @Import(name="lambda")
    private @Nullable Output<Function> lambda;

    /**
     * @return Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    public Optional<Output<Function>> lambda() {
        return Optional.ofNullable(this.lambda);
    }

    /**
     * ARN of a Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    @Import(name="lambdaArn")
    private @Nullable Output<String> lambdaArn;

    /**
     * @return ARN of a Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
     * 
     */
    public Optional<Output<String>> lambdaArn() {
        return Optional.ofNullable(this.lambdaArn);
    }

    /**
     * Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
     * 
     */
    @Import(name="targetGroup")
    private @Nullable Output<TargetGroup> targetGroup;

    /**
     * @return Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
     * 
     */
    public Optional<Output<TargetGroup>> targetGroup() {
        return Optional.ofNullable(this.targetGroup);
    }

    /**
     * ARN of the Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
     * 
     */
    @Import(name="targetGroupArn")
    private @Nullable Output<String> targetGroupArn;

    /**
     * @return ARN of the Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
     * 
     */
    public Optional<Output<String>> targetGroupArn() {
        return Optional.ofNullable(this.targetGroupArn);
    }

    private TargetGroupAttachmentArgs() {}

    private TargetGroupAttachmentArgs(TargetGroupAttachmentArgs $) {
        this.instance = $.instance;
        this.instanceId = $.instanceId;
        this.lambda = $.lambda;
        this.lambdaArn = $.lambdaArn;
        this.targetGroup = $.targetGroup;
        this.targetGroupArn = $.targetGroupArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetGroupAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetGroupAttachmentArgs $;

        public Builder() {
            $ = new TargetGroupAttachmentArgs();
        }

        public Builder(TargetGroupAttachmentArgs defaults) {
            $ = new TargetGroupAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instance EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder instance(@Nullable Output<Instance> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder instance(Instance instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param instanceId ID of an EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId ID of an EC2 Instance to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param lambda Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder lambda(@Nullable Output<Function> lambda) {
            $.lambda = lambda;
            return this;
        }

        /**
         * @param lambda Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder lambda(Function lambda) {
            return lambda(Output.of(lambda));
        }

        /**
         * @param lambdaArn ARN of a Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder lambdaArn(@Nullable Output<String> lambdaArn) {
            $.lambdaArn = lambdaArn;
            return this;
        }

        /**
         * @param lambdaArn ARN of a Lambda Function to attach to the Target Group. Exactly 1 of [instance], [instanceId], [lambda] or [lambdaArn] must be provided.
         * 
         * @return builder
         * 
         */
        public Builder lambdaArn(String lambdaArn) {
            return lambdaArn(Output.of(lambdaArn));
        }

        /**
         * @param targetGroup Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targetGroup(@Nullable Output<TargetGroup> targetGroup) {
            $.targetGroup = targetGroup;
            return this;
        }

        /**
         * @param targetGroup Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targetGroup(TargetGroup targetGroup) {
            return targetGroup(Output.of(targetGroup));
        }

        /**
         * @param targetGroupArn ARN of the Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArn(@Nullable Output<String> targetGroupArn) {
            $.targetGroupArn = targetGroupArn;
            return this;
        }

        /**
         * @param targetGroupArn ARN of the Target Group to attach to. Exactly one of [targetGroup] or [targetGroupArn] must be specified.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArn(String targetGroupArn) {
            return targetGroupArn(Output.of(targetGroupArn));
        }

        public TargetGroupAttachmentArgs build() {
            return $;
        }
    }

}
