// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsx.ecs.inputs;

import com.pulumi.awsx.ecs.inputs.TaskDefinitionSecretArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskDefinitionLogConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionLogConfigurationArgs Empty = new TaskDefinitionLogConfigurationArgs();

    @Import(name="logDriver", required=true)
    private Output<String> logDriver;

    public Output<String> logDriver() {
        return this.logDriver;
    }

    @Import(name="options")
    private @Nullable Output<Object> options;

    public Optional<Output<Object>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="secretOptions")
    private @Nullable Output<List<TaskDefinitionSecretArgs>> secretOptions;

    public Optional<Output<List<TaskDefinitionSecretArgs>>> secretOptions() {
        return Optional.ofNullable(this.secretOptions);
    }

    private TaskDefinitionLogConfigurationArgs() {}

    private TaskDefinitionLogConfigurationArgs(TaskDefinitionLogConfigurationArgs $) {
        this.logDriver = $.logDriver;
        this.options = $.options;
        this.secretOptions = $.secretOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskDefinitionLogConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskDefinitionLogConfigurationArgs $;

        public Builder() {
            $ = new TaskDefinitionLogConfigurationArgs();
        }

        public Builder(TaskDefinitionLogConfigurationArgs defaults) {
            $ = new TaskDefinitionLogConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder logDriver(Output<String> logDriver) {
            $.logDriver = logDriver;
            return this;
        }

        public Builder logDriver(String logDriver) {
            return logDriver(Output.of(logDriver));
        }

        public Builder options(@Nullable Output<Object> options) {
            $.options = options;
            return this;
        }

        public Builder options(Object options) {
            return options(Output.of(options));
        }

        public Builder secretOptions(@Nullable Output<List<TaskDefinitionSecretArgs>> secretOptions) {
            $.secretOptions = secretOptions;
            return this;
        }

        public Builder secretOptions(List<TaskDefinitionSecretArgs> secretOptions) {
            return secretOptions(Output.of(secretOptions));
        }

        public Builder secretOptions(TaskDefinitionSecretArgs... secretOptions) {
            return secretOptions(List.of(secretOptions));
        }

        public TaskDefinitionLogConfigurationArgs build() {
            $.logDriver = Objects.requireNonNull($.logDriver, "expected parameter 'logDriver' to be non-null");
            return $;
        }
    }

}
