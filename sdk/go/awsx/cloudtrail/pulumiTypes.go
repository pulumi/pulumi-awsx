// *** WARNING: this file was generated by pulumi-gen-awsx. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtrail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Defines the log group configuration for the CloudWatch Log Group to send logs to.
type LogGroup struct {
	// The ARN of the KMS Key to use when encrypting log data.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Creates a unique name beginning with the specified prefix
	NamePrefix *string `pulumi:"namePrefix"`
	// Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653, and 0. If you select 0, the events in the log group are always retained and never expire.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// A map of tags to assign to the resource. If configured with provider defaultTags present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// LogGroupInput is an input type that accepts LogGroupArgs and LogGroupOutput values.
// You can construct a concrete instance of `LogGroupInput` via:
//
//          LogGroupArgs{...}
type LogGroupInput interface {
	pulumi.Input

	ToLogGroupOutput() LogGroupOutput
	ToLogGroupOutputWithContext(context.Context) LogGroupOutput
}

// Defines the log group configuration for the CloudWatch Log Group to send logs to.
type LogGroupArgs struct {
	// The ARN of the KMS Key to use when encrypting log data.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Creates a unique name beginning with the specified prefix
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653, and 0. If you select 0, the events in the log group are always retained and never expire.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// A map of tags to assign to the resource. If configured with provider defaultTags present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LogGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogGroup)(nil)).Elem()
}

func (i LogGroupArgs) ToLogGroupOutput() LogGroupOutput {
	return i.ToLogGroupOutputWithContext(context.Background())
}

func (i LogGroupArgs) ToLogGroupOutputWithContext(ctx context.Context) LogGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogGroupOutput)
}

func (i LogGroupArgs) ToLogGroupPtrOutput() LogGroupPtrOutput {
	return i.ToLogGroupPtrOutputWithContext(context.Background())
}

func (i LogGroupArgs) ToLogGroupPtrOutputWithContext(ctx context.Context) LogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogGroupOutput).ToLogGroupPtrOutputWithContext(ctx)
}

// LogGroupPtrInput is an input type that accepts LogGroupArgs, LogGroupPtr and LogGroupPtrOutput values.
// You can construct a concrete instance of `LogGroupPtrInput` via:
//
//          LogGroupArgs{...}
//
//  or:
//
//          nil
type LogGroupPtrInput interface {
	pulumi.Input

	ToLogGroupPtrOutput() LogGroupPtrOutput
	ToLogGroupPtrOutputWithContext(context.Context) LogGroupPtrOutput
}

type logGroupPtrType LogGroupArgs

func LogGroupPtr(v *LogGroupArgs) LogGroupPtrInput {
	return (*logGroupPtrType)(v)
}

func (*logGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogGroup)(nil)).Elem()
}

func (i *logGroupPtrType) ToLogGroupPtrOutput() LogGroupPtrOutput {
	return i.ToLogGroupPtrOutputWithContext(context.Background())
}

func (i *logGroupPtrType) ToLogGroupPtrOutputWithContext(ctx context.Context) LogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogGroupPtrOutput)
}

// Defines the log group configuration for the CloudWatch Log Group to send logs to.
type LogGroupOutput struct{ *pulumi.OutputState }

func (LogGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogGroup)(nil)).Elem()
}

func (o LogGroupOutput) ToLogGroupOutput() LogGroupOutput {
	return o
}

func (o LogGroupOutput) ToLogGroupOutputWithContext(ctx context.Context) LogGroupOutput {
	return o
}

func (o LogGroupOutput) ToLogGroupPtrOutput() LogGroupPtrOutput {
	return o.ToLogGroupPtrOutputWithContext(context.Background())
}

func (o LogGroupOutput) ToLogGroupPtrOutputWithContext(ctx context.Context) LogGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogGroup) *LogGroup {
		return &v
	}).(LogGroupPtrOutput)
}

// The ARN of the KMS Key to use when encrypting log data.
func (o LogGroupOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogGroup) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Creates a unique name beginning with the specified prefix
func (o LogGroupOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogGroup) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653, and 0. If you select 0, the events in the log group are always retained and never expire.
func (o LogGroupOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogGroup) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// A map of tags to assign to the resource. If configured with provider defaultTags present, tags with matching keys will overwrite those defined at the provider-level.
func (o LogGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogGroup) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LogGroupPtrOutput struct{ *pulumi.OutputState }

func (LogGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogGroup)(nil)).Elem()
}

func (o LogGroupPtrOutput) ToLogGroupPtrOutput() LogGroupPtrOutput {
	return o
}

func (o LogGroupPtrOutput) ToLogGroupPtrOutputWithContext(ctx context.Context) LogGroupPtrOutput {
	return o
}

func (o LogGroupPtrOutput) Elem() LogGroupOutput {
	return o.ApplyT(func(v *LogGroup) LogGroup {
		if v != nil {
			return *v
		}
		var ret LogGroup
		return ret
	}).(LogGroupOutput)
}

// The ARN of the KMS Key to use when encrypting log data.
func (o LogGroupPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogGroup) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Creates a unique name beginning with the specified prefix
func (o LogGroupPtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogGroup) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653, and 0. If you select 0, the events in the log group are always retained and never expire.
func (o LogGroupPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogGroup) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// A map of tags to assign to the resource. If configured with provider defaultTags present, tags with matching keys will overwrite those defined at the provider-level.
func (o LogGroupPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogGroup) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogGroupInput)(nil)).Elem(), LogGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogGroupPtrInput)(nil)).Elem(), LogGroupArgs{})
	pulumi.RegisterOutputType(LogGroupOutput{})
	pulumi.RegisterOutputType(LogGroupPtrOutput{})
}
