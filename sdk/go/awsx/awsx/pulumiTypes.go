// *** WARNING: this file was generated by pulumi-gen-awsx. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package awsx

import (
	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
)

// The set of arguments for constructing a Bucket resource.
type Bucket struct {
	// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
	AccelerationStatus *string `pulumi:"accelerationStatus"`
	// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`.
	Acl *string `pulumi:"acl"`
	// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
	Arn *string `pulumi:"arn"`
	// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
	Bucket *string `pulumi:"bucket"`
	// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
	CorsRules []s3.BucketCorsRule `pulumi:"corsRules"`
	// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
	Grants []s3.BucketGrant `pulumi:"grants"`
	// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
	LifecycleRules []s3.BucketLifecycleRule `pulumi:"lifecycleRules"`
	// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
	Loggings []s3.BucketLogging `pulumi:"loggings"`
	// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
	ObjectLockConfiguration *s3.BucketObjectLockConfiguration `pulumi:"objectLockConfiguration"`
	// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), the provider may view the policy as constantly changing in a `pulumi up / preview / update`. In this case, please make sure you use the verbose/specific version of the policy.
	Policy *string `pulumi:"policy"`
	// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
	ReplicationConfiguration *s3.BucketReplicationConfiguration `pulumi:"replicationConfiguration"`
	// Specifies who should bear the cost of Amazon S3 data transfer.
	// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
	// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
	// developer guide for more information.
	RequestPayer *string `pulumi:"requestPayer"`
	// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
	ServerSideEncryptionConfiguration *s3.BucketServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	// A mapping of tags to assign to the bucket.
	Tags map[string]string `pulumi:"tags"`
	// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
	Versioning *s3.BucketVersioning `pulumi:"versioning"`
	// A website object (documented below).
	Website *s3.BucketWebsite `pulumi:"website"`
	// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
	WebsiteDomain *string `pulumi:"websiteDomain"`
	// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
	WebsiteEndpoint *string `pulumi:"websiteEndpoint"`
}

// Bucket with default setup unless explicitly skipped.
type DefaultBucket struct {
	// Arguments to use instead of the default values during creation.
	Args *Bucket `pulumi:"args"`
	// Identity of an existing bucket to use. Cannot be used in combination with `args`.
	Existing *ExistingBucket `pulumi:"existing"`
	// Skip creation of the bucket.
	Skip *bool `pulumi:"skip"`
}

// Log group with default setup unless explicitly skipped.
type DefaultLogGroup struct {
	// Arguments to use instead of the default values during creation.
	Args *LogGroup `pulumi:"args"`
	// Identity of an existing log group to use. Cannot be used in combination with `args` or `opts`.
	Existing *ExistingLogGroup `pulumi:"existing"`
	// Skip creation of the log group.
	Skip *bool `pulumi:"skip"`
}

// Role and policy attachments with default setup unless explicitly skipped or an existing role ARN provided.
type DefaultRoleWithPolicy struct {
	// Args to use when creating the role and policies. Can't be specified if `roleArn` is used.
	Args *RoleWithPolicy `pulumi:"args"`
	// ARN of existing role to use instead of creating a new role. Cannot be used in combination with `args` or `opts`.
	RoleArn *string `pulumi:"roleArn"`
	// Skips creation of the role if set to `true`.
	Skip *bool `pulumi:"skip"`
}

// Reference to an existing bucket.
type ExistingBucket struct {
	// Arn of the bucket. Only one of [arn] or [name] can be specified.
	Arn *string `pulumi:"arn"`
	// Name of the bucket. Only one of [arn] or [name] can be specified.
	Name *string `pulumi:"name"`
}

// Reference to an existing log group.
type ExistingLogGroup struct {
	// Arn of the log group. Only one of [arn] or [name] can be specified.
	Arn *string `pulumi:"arn"`
	// Name of the log group. Only one of [arn] or [name] can be specified.
	Name *string `pulumi:"name"`
	// Region of the log group. If not specified, the provider region will be used.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a LogGroup resource.
type LogGroup struct {
	// The ARN of the KMS Key to use when encrypting log data. Please note, after the AWS KMS CMK is disassociated from the log group,
	// AWS CloudWatch Logs stops encrypting newly ingested data for the log group. All previously ingested data remains encrypted, and AWS CloudWatch Logs requires
	// permissions for the CMK whenever the encrypted data is requested.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The name of the log group. If omitted, this provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Specifies the number of days
	// you want to retain log events in the specified log group.  Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653, and 0.
	// If you select 0, the events in the log group are always retained and never expire.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// Log group which is only created if enabled.
type OptionalLogGroup struct {
	// Arguments to use instead of the default values during creation.
	Args *LogGroup `pulumi:"args"`
	// Enable creation of the log group.
	Enable *bool `pulumi:"enable"`
	// Identity of an existing log group to use. Cannot be used in combination with `args` or `opts`.
	Existing *ExistingLogGroup `pulumi:"existing"`
}

// Bucket with default setup.
type RequiredBucket struct {
	// Arguments to use instead of the default values during creation.
	Args *Bucket `pulumi:"args"`
	// Identity of an existing bucket to use. Cannot be used in combination with `args`.
	Existing *ExistingBucket `pulumi:"existing"`
}

// Log group with default setup.
type RequiredLogGroup struct {
	// Arguments to use instead of the default values during creation.
	Args *LogGroup `pulumi:"args"`
	// Identity of an existing log group to use. Cannot be used in combination with `args` or `opts`.
	Existing *ExistingLogGroup `pulumi:"existing"`
}

// The set of arguments for constructing a Role resource and Policy attachments.
type RoleWithPolicy struct {
	// Description of the role.
	Description *string `pulumi:"description"`
	// Whether to force detaching any policies the role has before destroying it. Defaults to `false`.
	ForceDetachPolicies *bool `pulumi:"forceDetachPolicies"`
	// Configuration block defining an exclusive set of IAM inline policies associated with the IAM role. See below. If no blocks are configured, this provider will not manage any inline policies in this resource. Configuring one empty block (i.e., `inline_policy {}`) will cause the provider to remove _all_ inline policies added out of band on `apply`.
	InlinePolicies []iam.RoleInlinePolicy `pulumi:"inlinePolicies"`
	// Set of exclusive IAM managed policy ARNs to attach to the IAM role. If this attribute is not configured, this provider will ignore policy attachments to this resource. When configured, the provider will align the role's managed policy attachments with this set by attaching or detaching managed policies. Configuring an empty set (i.e., `managed_policy_arns = []`) will cause the provider to remove _all_ managed policy attachments.
	ManagedPolicyArns []string `pulumi:"managedPolicyArns"`
	// Maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
	MaxSessionDuration *int `pulumi:"maxSessionDuration"`
	// Name of the role policy.
	Name *string `pulumi:"name"`
	// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Path to the role. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
	Path *string `pulumi:"path"`
	// ARN of the policy that is used to set the permissions boundary for the role.
	PermissionsBoundary *string `pulumi:"permissionsBoundary"`
	// ARNs of the policies to attach to the created role.
	PolicyArns []string `pulumi:"policyArns"`
	// Key-value mapping of tags for the IAM role. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

func init() {
}
