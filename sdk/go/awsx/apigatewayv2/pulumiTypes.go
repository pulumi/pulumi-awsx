// Code generated by pulumi-gen-awsx DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
	"github.com/pulumi/pulumi-awsx/sdk/v2/go/awsx/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// Manages an Amazon API Gateway Version 2 domain name.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).
//
// > **Note:** This resource establishes ownership of and the TLS settings for
// a particular domain name. An API stage can be associated with the domain name using the `aws.apigatewayv2.ApiMapping` resource.
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewDomainName(ctx, "example", &apigatewayv2.DomainNameArgs{
//				DomainName: pulumi.String("ws-api.example.com"),
//				DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
//					CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
//					EndpointType:   pulumi.String("REGIONAL"),
//					SecurityPolicy: pulumi.String("TLS_1_2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Associated Route 53 Resource Record
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/route53"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDomainName, err := apigatewayv2.NewDomainName(ctx, "exampleDomainName", &apigatewayv2.DomainNameArgs{
//				DomainName: pulumi.String("http-api.example.com"),
//				DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
//					CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
//					EndpointType:   pulumi.String("REGIONAL"),
//					SecurityPolicy: pulumi.String("TLS_1_2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = route53.NewRecord(ctx, "exampleRecord", &route53.RecordArgs{
//				Name:   exampleDomainName.DomainName,
//				Type:   pulumi.String("A"),
//				ZoneId: pulumi.Any(aws_route53_zone.Example.Zone_id),
//				Aliases: route53.RecordAliasArray{
//					&route53.RecordAliasArgs{
//						Name: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (*string, error) {
//							return &domainNameConfiguration.TargetDomainName, nil
//						}).(pulumi.StringPtrOutput),
//						ZoneId: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (*string, error) {
//							return &domainNameConfiguration.HostedZoneId, nil
//						}).(pulumi.StringPtrOutput),
//						EvaluateTargetHealth: pulumi.Bool(false),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_domain_name` using the domain name. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/domainName:DomainName example ws-api.example.com
//
// ```
type DomainConfiguration struct {
	// Domain name configuration. See below.
	DomainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration `pulumi:"domainNameConfiguration"`
	// Mutual TLS authentication configuration for the domain name.
	MutualTlsAuthentication *apigatewayv2.DomainNameMutualTlsAuthentication `pulumi:"mutualTlsAuthentication"`
	// Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// DomainConfigurationInput is an input type that accepts DomainConfigurationArgs and DomainConfigurationOutput values.
// You can construct a concrete instance of `DomainConfigurationInput` via:
//
//	DomainConfigurationArgs{...}
type DomainConfigurationInput interface {
	pulumi.Input

	ToDomainConfigurationOutput() DomainConfigurationOutput
	ToDomainConfigurationOutputWithContext(context.Context) DomainConfigurationOutput
}

// Manages an Amazon API Gateway Version 2 domain name.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).
//
// > **Note:** This resource establishes ownership of and the TLS settings for
// a particular domain name. An API stage can be associated with the domain name using the `aws.apigatewayv2.ApiMapping` resource.
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewDomainName(ctx, "example", &apigatewayv2.DomainNameArgs{
//				DomainName: pulumi.String("ws-api.example.com"),
//				DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
//					CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
//					EndpointType:   pulumi.String("REGIONAL"),
//					SecurityPolicy: pulumi.String("TLS_1_2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Associated Route 53 Resource Record
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/route53"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDomainName, err := apigatewayv2.NewDomainName(ctx, "exampleDomainName", &apigatewayv2.DomainNameArgs{
//				DomainName: pulumi.String("http-api.example.com"),
//				DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
//					CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
//					EndpointType:   pulumi.String("REGIONAL"),
//					SecurityPolicy: pulumi.String("TLS_1_2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = route53.NewRecord(ctx, "exampleRecord", &route53.RecordArgs{
//				Name:   exampleDomainName.DomainName,
//				Type:   pulumi.String("A"),
//				ZoneId: pulumi.Any(aws_route53_zone.Example.Zone_id),
//				Aliases: route53.RecordAliasArray{
//					&route53.RecordAliasArgs{
//						Name: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (*string, error) {
//							return &domainNameConfiguration.TargetDomainName, nil
//						}).(pulumi.StringPtrOutput),
//						ZoneId: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (*string, error) {
//							return &domainNameConfiguration.HostedZoneId, nil
//						}).(pulumi.StringPtrOutput),
//						EvaluateTargetHealth: pulumi.Bool(false),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_domain_name` using the domain name. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/domainName:DomainName example ws-api.example.com
//
// ```
type DomainConfigurationArgs struct {
	// Domain name configuration. See below.
	DomainNameConfiguration apigatewayv2.DomainNameDomainNameConfigurationInput `pulumi:"domainNameConfiguration"`
	// Mutual TLS authentication configuration for the domain name.
	MutualTlsAuthentication apigatewayv2.DomainNameMutualTlsAuthenticationPtrInput `pulumi:"mutualTlsAuthentication"`
	// Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DomainConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfiguration)(nil)).Elem()
}

func (i DomainConfigurationArgs) ToDomainConfigurationOutput() DomainConfigurationOutput {
	return i.ToDomainConfigurationOutputWithContext(context.Background())
}

func (i DomainConfigurationArgs) ToDomainConfigurationOutputWithContext(ctx context.Context) DomainConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationOutput)
}

func (i DomainConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DomainConfiguration] {
	return pulumix.Output[DomainConfiguration]{
		OutputState: i.ToDomainConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DomainConfigurationArgs) ToDomainConfigurationPtrOutput() DomainConfigurationPtrOutput {
	return i.ToDomainConfigurationPtrOutputWithContext(context.Background())
}

func (i DomainConfigurationArgs) ToDomainConfigurationPtrOutputWithContext(ctx context.Context) DomainConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationOutput).ToDomainConfigurationPtrOutputWithContext(ctx)
}

// DomainConfigurationPtrInput is an input type that accepts DomainConfigurationArgs, DomainConfigurationPtr and DomainConfigurationPtrOutput values.
// You can construct a concrete instance of `DomainConfigurationPtrInput` via:
//
//	        DomainConfigurationArgs{...}
//
//	or:
//
//	        nil
type DomainConfigurationPtrInput interface {
	pulumi.Input

	ToDomainConfigurationPtrOutput() DomainConfigurationPtrOutput
	ToDomainConfigurationPtrOutputWithContext(context.Context) DomainConfigurationPtrOutput
}

type domainConfigurationPtrType DomainConfigurationArgs

func DomainConfigurationPtr(v *DomainConfigurationArgs) DomainConfigurationPtrInput {
	return (*domainConfigurationPtrType)(v)
}

func (*domainConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfiguration)(nil)).Elem()
}

func (i *domainConfigurationPtrType) ToDomainConfigurationPtrOutput() DomainConfigurationPtrOutput {
	return i.ToDomainConfigurationPtrOutputWithContext(context.Background())
}

func (i *domainConfigurationPtrType) ToDomainConfigurationPtrOutputWithContext(ctx context.Context) DomainConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationPtrOutput)
}

func (i *domainConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainConfiguration] {
	return pulumix.Output[*DomainConfiguration]{
		OutputState: i.ToDomainConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// Manages an Amazon API Gateway Version 2 domain name.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).
//
// > **Note:** This resource establishes ownership of and the TLS settings for
// a particular domain name. An API stage can be associated with the domain name using the `aws.apigatewayv2.ApiMapping` resource.
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewDomainName(ctx, "example", &apigatewayv2.DomainNameArgs{
//				DomainName: pulumi.String("ws-api.example.com"),
//				DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
//					CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
//					EndpointType:   pulumi.String("REGIONAL"),
//					SecurityPolicy: pulumi.String("TLS_1_2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Associated Route 53 Resource Record
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/route53"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDomainName, err := apigatewayv2.NewDomainName(ctx, "exampleDomainName", &apigatewayv2.DomainNameArgs{
//				DomainName: pulumi.String("http-api.example.com"),
//				DomainNameConfiguration: &apigatewayv2.DomainNameDomainNameConfigurationArgs{
//					CertificateArn: pulumi.Any(aws_acm_certificate.Example.Arn),
//					EndpointType:   pulumi.String("REGIONAL"),
//					SecurityPolicy: pulumi.String("TLS_1_2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = route53.NewRecord(ctx, "exampleRecord", &route53.RecordArgs{
//				Name:   exampleDomainName.DomainName,
//				Type:   pulumi.String("A"),
//				ZoneId: pulumi.Any(aws_route53_zone.Example.Zone_id),
//				Aliases: route53.RecordAliasArray{
//					&route53.RecordAliasArgs{
//						Name: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (*string, error) {
//							return &domainNameConfiguration.TargetDomainName, nil
//						}).(pulumi.StringPtrOutput),
//						ZoneId: exampleDomainName.DomainNameConfiguration.ApplyT(func(domainNameConfiguration apigatewayv2.DomainNameDomainNameConfiguration) (*string, error) {
//							return &domainNameConfiguration.HostedZoneId, nil
//						}).(pulumi.StringPtrOutput),
//						EvaluateTargetHealth: pulumi.Bool(false),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_domain_name` using the domain name. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/domainName:DomainName example ws-api.example.com
//
// ```
type DomainConfigurationOutput struct{ *pulumi.OutputState }

func (DomainConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfiguration)(nil)).Elem()
}

func (o DomainConfigurationOutput) ToDomainConfigurationOutput() DomainConfigurationOutput {
	return o
}

func (o DomainConfigurationOutput) ToDomainConfigurationOutputWithContext(ctx context.Context) DomainConfigurationOutput {
	return o
}

func (o DomainConfigurationOutput) ToDomainConfigurationPtrOutput() DomainConfigurationPtrOutput {
	return o.ToDomainConfigurationPtrOutputWithContext(context.Background())
}

func (o DomainConfigurationOutput) ToDomainConfigurationPtrOutputWithContext(ctx context.Context) DomainConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainConfiguration) *DomainConfiguration {
		return &v
	}).(DomainConfigurationPtrOutput)
}

func (o DomainConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DomainConfiguration] {
	return pulumix.Output[DomainConfiguration]{
		OutputState: o.OutputState,
	}
}

// Domain name configuration. See below.
func (o DomainConfigurationOutput) DomainNameConfiguration() apigatewayv2.DomainNameDomainNameConfigurationOutput {
	return o.ApplyT(func(v DomainConfiguration) apigatewayv2.DomainNameDomainNameConfiguration {
		return v.DomainNameConfiguration
	}).(apigatewayv2.DomainNameDomainNameConfigurationOutput)
}

// Mutual TLS authentication configuration for the domain name.
func (o DomainConfigurationOutput) MutualTlsAuthentication() apigatewayv2.DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyT(func(v DomainConfiguration) *apigatewayv2.DomainNameMutualTlsAuthentication {
		return v.MutualTlsAuthentication
	}).(apigatewayv2.DomainNameMutualTlsAuthenticationPtrOutput)
}

// Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DomainConfigurationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DomainConfiguration) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type DomainConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DomainConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfiguration)(nil)).Elem()
}

func (o DomainConfigurationPtrOutput) ToDomainConfigurationPtrOutput() DomainConfigurationPtrOutput {
	return o
}

func (o DomainConfigurationPtrOutput) ToDomainConfigurationPtrOutputWithContext(ctx context.Context) DomainConfigurationPtrOutput {
	return o
}

func (o DomainConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainConfiguration] {
	return pulumix.Output[*DomainConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DomainConfigurationPtrOutput) Elem() DomainConfigurationOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfiguration {
		if v != nil {
			return *v
		}
		var ret DomainConfiguration
		return ret
	}).(DomainConfigurationOutput)
}

// Domain name configuration. See below.
func (o DomainConfigurationPtrOutput) DomainNameConfiguration() apigatewayv2.DomainNameDomainNameConfigurationPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) *apigatewayv2.DomainNameDomainNameConfiguration {
		if v == nil {
			return nil
		}
		return &v.DomainNameConfiguration
	}).(apigatewayv2.DomainNameDomainNameConfigurationPtrOutput)
}

// Mutual TLS authentication configuration for the domain name.
func (o DomainConfigurationPtrOutput) MutualTlsAuthentication() apigatewayv2.DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) *apigatewayv2.DomainNameMutualTlsAuthentication {
		if v == nil {
			return nil
		}
		return v.MutualTlsAuthentication
	}).(apigatewayv2.DomainNameMutualTlsAuthenticationPtrOutput)
}

// Map of tags to assign to the domain name. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DomainConfigurationPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DomainConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Manages an Amazon API Gateway Version 2 API mapping.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewApiMapping(ctx, "example", &apigatewayv2.ApiMappingArgs{
//				ApiId:      pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				DomainName: pulumi.Any(aws_apigatewayv2_domain_name.Example.Id),
//				Stage:      pulumi.Any(aws_apigatewayv2_stage.Example.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_api_mapping` using the API mapping identifier and domain name. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/apiMapping:ApiMapping example 1122334/ws-api.example.com
//
// ```
type DomainMapping struct {
	// The API mapping key. Refer to [REST API](https://docs.aws.amazon.com/apigateway/latest/developerguide/rest-api-mappings.html), [HTTP API](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-mappings.html) or [WebSocket API](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-mappings.html).
	ApiMappingKey *string `pulumi:"apiMappingKey"`
	// Configuration of the domain name to create. Cannot be specified together with `domainId`.
	DomainConfiguration *DomainConfiguration `pulumi:"domainConfiguration"`
	// Identifier of an existing domain. Cannot be specified together with `domainConfiguration`.
	DomainId *string `pulumi:"domainId"`
	// API stage. Use the `aws.apigatewayv2.Stage` resource to configure an API stage.
	Stage string `pulumi:"stage"`
}

// Manages an Amazon API Gateway Version 2 authorizer.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic WebSocket API
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewAuthorizer(ctx, "example", &apigatewayv2.AuthorizerArgs{
//				ApiId:          pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				AuthorizerType: pulumi.String("REQUEST"),
//				AuthorizerUri:  pulumi.Any(aws_lambda_function.Example.Invoke_arn),
//				IdentitySources: pulumi.StringArray{
//					pulumi.String("route.request.header.Auth"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Basic HTTP API
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewAuthorizer(ctx, "example", &apigatewayv2.AuthorizerArgs{
//				ApiId:          pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				AuthorizerType: pulumi.String("REQUEST"),
//				AuthorizerUri:  pulumi.Any(aws_lambda_function.Example.Invoke_arn),
//				IdentitySources: pulumi.StringArray{
//					pulumi.String("$request.header.Authorization"),
//				},
//				AuthorizerPayloadFormatVersion: pulumi.String("2.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_authorizer` using the API identifier and authorizer identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/authorizer:Authorizer example aabbccddee/1122334
//
// ```
type HttpAuthorizer struct {
	// Required credentials as an IAM role for API Gateway to invoke the authorizer.
	// Supported only for `REQUEST` authorizers.
	AuthorizerCredentialsArn *string `pulumi:"authorizerCredentialsArn"`
	// Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.
	// Valid values: `1.0`, `2.0`.
	AuthorizerPayloadFormatVersion *string `pulumi:"authorizerPayloadFormatVersion"`
	// Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.
	// If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to `300`.
	// Supported only for HTTP API Lambda authorizers.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// Authorizer type. Valid values: `JWT`, `REQUEST`.
	// Specify `REQUEST` for a Lambda function using incoming request parameters.
	// For HTTP APIs, specify `JWT` to use JSON Web Tokens.
	AuthorizerType string `pulumi:"authorizerType"`
	// Authorizer's Uniform Resource Identifier (URI).
	// For `REQUEST` authorizers this must be a well-formed Lambda function URI, such as the `invoke_arn` attribute of the `aws.lambda.Function` resource.
	// Supported only for `REQUEST` authorizers. Must be between 1 and 2048 characters in length.
	AuthorizerUri *string `pulumi:"authorizerUri"`
	// Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.
	// Supported only for HTTP APIs.
	EnableSimpleResponses *bool `pulumi:"enableSimpleResponses"`
	// Identity sources for which authorization is requested.
	// For `REQUEST` authorizers the value is a list of one or more mapping expressions of the specified request parameters.
	// For `JWT` authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.
	IdentitySources []string `pulumi:"identitySources"`
	// Configuration of a JWT authorizer. Required for the `JWT` authorizer type.
	// Supported only for HTTP APIs.
	JwtConfiguration *apigatewayv2.AuthorizerJwtConfiguration `pulumi:"jwtConfiguration"`
	// Name of the authorizer. Must be between 1 and 128 characters in length.
	Name *string `pulumi:"name"`
}

// HttpAuthorizerInput is an input type that accepts HttpAuthorizerArgs and HttpAuthorizerOutput values.
// You can construct a concrete instance of `HttpAuthorizerInput` via:
//
//	HttpAuthorizerArgs{...}
type HttpAuthorizerInput interface {
	pulumi.Input

	ToHttpAuthorizerOutput() HttpAuthorizerOutput
	ToHttpAuthorizerOutputWithContext(context.Context) HttpAuthorizerOutput
}

// Manages an Amazon API Gateway Version 2 authorizer.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic WebSocket API
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewAuthorizer(ctx, "example", &apigatewayv2.AuthorizerArgs{
//				ApiId:          pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				AuthorizerType: pulumi.String("REQUEST"),
//				AuthorizerUri:  pulumi.Any(aws_lambda_function.Example.Invoke_arn),
//				IdentitySources: pulumi.StringArray{
//					pulumi.String("route.request.header.Auth"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Basic HTTP API
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewAuthorizer(ctx, "example", &apigatewayv2.AuthorizerArgs{
//				ApiId:          pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				AuthorizerType: pulumi.String("REQUEST"),
//				AuthorizerUri:  pulumi.Any(aws_lambda_function.Example.Invoke_arn),
//				IdentitySources: pulumi.StringArray{
//					pulumi.String("$request.header.Authorization"),
//				},
//				AuthorizerPayloadFormatVersion: pulumi.String("2.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_authorizer` using the API identifier and authorizer identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/authorizer:Authorizer example aabbccddee/1122334
//
// ```
type HttpAuthorizerArgs struct {
	// Required credentials as an IAM role for API Gateway to invoke the authorizer.
	// Supported only for `REQUEST` authorizers.
	AuthorizerCredentialsArn pulumi.StringPtrInput `pulumi:"authorizerCredentialsArn"`
	// Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.
	// Valid values: `1.0`, `2.0`.
	AuthorizerPayloadFormatVersion pulumi.StringPtrInput `pulumi:"authorizerPayloadFormatVersion"`
	// Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.
	// If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to `300`.
	// Supported only for HTTP API Lambda authorizers.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput `pulumi:"authorizerResultTtlInSeconds"`
	// Authorizer type. Valid values: `JWT`, `REQUEST`.
	// Specify `REQUEST` for a Lambda function using incoming request parameters.
	// For HTTP APIs, specify `JWT` to use JSON Web Tokens.
	AuthorizerType pulumi.StringInput `pulumi:"authorizerType"`
	// Authorizer's Uniform Resource Identifier (URI).
	// For `REQUEST` authorizers this must be a well-formed Lambda function URI, such as the `invoke_arn` attribute of the `aws.lambda.Function` resource.
	// Supported only for `REQUEST` authorizers. Must be between 1 and 2048 characters in length.
	AuthorizerUri pulumi.StringPtrInput `pulumi:"authorizerUri"`
	// Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.
	// Supported only for HTTP APIs.
	EnableSimpleResponses pulumi.BoolPtrInput `pulumi:"enableSimpleResponses"`
	// Identity sources for which authorization is requested.
	// For `REQUEST` authorizers the value is a list of one or more mapping expressions of the specified request parameters.
	// For `JWT` authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.
	IdentitySources pulumi.StringArrayInput `pulumi:"identitySources"`
	// Configuration of a JWT authorizer. Required for the `JWT` authorizer type.
	// Supported only for HTTP APIs.
	JwtConfiguration apigatewayv2.AuthorizerJwtConfigurationPtrInput `pulumi:"jwtConfiguration"`
	// Name of the authorizer. Must be between 1 and 128 characters in length.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (HttpAuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpAuthorizer)(nil)).Elem()
}

func (i HttpAuthorizerArgs) ToHttpAuthorizerOutput() HttpAuthorizerOutput {
	return i.ToHttpAuthorizerOutputWithContext(context.Background())
}

func (i HttpAuthorizerArgs) ToHttpAuthorizerOutputWithContext(ctx context.Context) HttpAuthorizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpAuthorizerOutput)
}

func (i HttpAuthorizerArgs) ToOutput(ctx context.Context) pulumix.Output[HttpAuthorizer] {
	return pulumix.Output[HttpAuthorizer]{
		OutputState: i.ToHttpAuthorizerOutputWithContext(ctx).OutputState,
	}
}

func (i HttpAuthorizerArgs) ToHttpAuthorizerPtrOutput() HttpAuthorizerPtrOutput {
	return i.ToHttpAuthorizerPtrOutputWithContext(context.Background())
}

func (i HttpAuthorizerArgs) ToHttpAuthorizerPtrOutputWithContext(ctx context.Context) HttpAuthorizerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpAuthorizerOutput).ToHttpAuthorizerPtrOutputWithContext(ctx)
}

// HttpAuthorizerPtrInput is an input type that accepts HttpAuthorizerArgs, HttpAuthorizerPtr and HttpAuthorizerPtrOutput values.
// You can construct a concrete instance of `HttpAuthorizerPtrInput` via:
//
//	        HttpAuthorizerArgs{...}
//
//	or:
//
//	        nil
type HttpAuthorizerPtrInput interface {
	pulumi.Input

	ToHttpAuthorizerPtrOutput() HttpAuthorizerPtrOutput
	ToHttpAuthorizerPtrOutputWithContext(context.Context) HttpAuthorizerPtrOutput
}

type httpAuthorizerPtrType HttpAuthorizerArgs

func HttpAuthorizerPtr(v *HttpAuthorizerArgs) HttpAuthorizerPtrInput {
	return (*httpAuthorizerPtrType)(v)
}

func (*httpAuthorizerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpAuthorizer)(nil)).Elem()
}

func (i *httpAuthorizerPtrType) ToHttpAuthorizerPtrOutput() HttpAuthorizerPtrOutput {
	return i.ToHttpAuthorizerPtrOutputWithContext(context.Background())
}

func (i *httpAuthorizerPtrType) ToHttpAuthorizerPtrOutputWithContext(ctx context.Context) HttpAuthorizerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpAuthorizerPtrOutput)
}

func (i *httpAuthorizerPtrType) ToOutput(ctx context.Context) pulumix.Output[*HttpAuthorizer] {
	return pulumix.Output[*HttpAuthorizer]{
		OutputState: i.ToHttpAuthorizerPtrOutputWithContext(ctx).OutputState,
	}
}

// Manages an Amazon API Gateway Version 2 authorizer.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic WebSocket API
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewAuthorizer(ctx, "example", &apigatewayv2.AuthorizerArgs{
//				ApiId:          pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				AuthorizerType: pulumi.String("REQUEST"),
//				AuthorizerUri:  pulumi.Any(aws_lambda_function.Example.Invoke_arn),
//				IdentitySources: pulumi.StringArray{
//					pulumi.String("route.request.header.Auth"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Basic HTTP API
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewAuthorizer(ctx, "example", &apigatewayv2.AuthorizerArgs{
//				ApiId:          pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				AuthorizerType: pulumi.String("REQUEST"),
//				AuthorizerUri:  pulumi.Any(aws_lambda_function.Example.Invoke_arn),
//				IdentitySources: pulumi.StringArray{
//					pulumi.String("$request.header.Authorization"),
//				},
//				AuthorizerPayloadFormatVersion: pulumi.String("2.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_authorizer` using the API identifier and authorizer identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/authorizer:Authorizer example aabbccddee/1122334
//
// ```
type HttpAuthorizerOutput struct{ *pulumi.OutputState }

func (HttpAuthorizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpAuthorizer)(nil)).Elem()
}

func (o HttpAuthorizerOutput) ToHttpAuthorizerOutput() HttpAuthorizerOutput {
	return o
}

func (o HttpAuthorizerOutput) ToHttpAuthorizerOutputWithContext(ctx context.Context) HttpAuthorizerOutput {
	return o
}

func (o HttpAuthorizerOutput) ToHttpAuthorizerPtrOutput() HttpAuthorizerPtrOutput {
	return o.ToHttpAuthorizerPtrOutputWithContext(context.Background())
}

func (o HttpAuthorizerOutput) ToHttpAuthorizerPtrOutputWithContext(ctx context.Context) HttpAuthorizerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpAuthorizer) *HttpAuthorizer {
		return &v
	}).(HttpAuthorizerPtrOutput)
}

func (o HttpAuthorizerOutput) ToOutput(ctx context.Context) pulumix.Output[HttpAuthorizer] {
	return pulumix.Output[HttpAuthorizer]{
		OutputState: o.OutputState,
	}
}

// Required credentials as an IAM role for API Gateway to invoke the authorizer.
// Supported only for `REQUEST` authorizers.
func (o HttpAuthorizerOutput) AuthorizerCredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *string { return v.AuthorizerCredentialsArn }).(pulumi.StringPtrOutput)
}

// Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.
// Valid values: `1.0`, `2.0`.
func (o HttpAuthorizerOutput) AuthorizerPayloadFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *string { return v.AuthorizerPayloadFormatVersion }).(pulumi.StringPtrOutput)
}

// Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.
// If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to `300`.
// Supported only for HTTP API Lambda authorizers.
func (o HttpAuthorizerOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *int { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntPtrOutput)
}

// Authorizer type. Valid values: `JWT`, `REQUEST`.
// Specify `REQUEST` for a Lambda function using incoming request parameters.
// For HTTP APIs, specify `JWT` to use JSON Web Tokens.
func (o HttpAuthorizerOutput) AuthorizerType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpAuthorizer) string { return v.AuthorizerType }).(pulumi.StringOutput)
}

// Authorizer's Uniform Resource Identifier (URI).
// For `REQUEST` authorizers this must be a well-formed Lambda function URI, such as the `invoke_arn` attribute of the `aws.lambda.Function` resource.
// Supported only for `REQUEST` authorizers. Must be between 1 and 2048 characters in length.
func (o HttpAuthorizerOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *string { return v.AuthorizerUri }).(pulumi.StringPtrOutput)
}

// Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.
// Supported only for HTTP APIs.
func (o HttpAuthorizerOutput) EnableSimpleResponses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *bool { return v.EnableSimpleResponses }).(pulumi.BoolPtrOutput)
}

// Identity sources for which authorization is requested.
// For `REQUEST` authorizers the value is a list of one or more mapping expressions of the specified request parameters.
// For `JWT` authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.
func (o HttpAuthorizerOutput) IdentitySources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpAuthorizer) []string { return v.IdentitySources }).(pulumi.StringArrayOutput)
}

// Configuration of a JWT authorizer. Required for the `JWT` authorizer type.
// Supported only for HTTP APIs.
func (o HttpAuthorizerOutput) JwtConfiguration() apigatewayv2.AuthorizerJwtConfigurationPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *apigatewayv2.AuthorizerJwtConfiguration { return v.JwtConfiguration }).(apigatewayv2.AuthorizerJwtConfigurationPtrOutput)
}

// Name of the authorizer. Must be between 1 and 128 characters in length.
func (o HttpAuthorizerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpAuthorizer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type HttpAuthorizerPtrOutput struct{ *pulumi.OutputState }

func (HttpAuthorizerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpAuthorizer)(nil)).Elem()
}

func (o HttpAuthorizerPtrOutput) ToHttpAuthorizerPtrOutput() HttpAuthorizerPtrOutput {
	return o
}

func (o HttpAuthorizerPtrOutput) ToHttpAuthorizerPtrOutputWithContext(ctx context.Context) HttpAuthorizerPtrOutput {
	return o
}

func (o HttpAuthorizerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*HttpAuthorizer] {
	return pulumix.Output[*HttpAuthorizer]{
		OutputState: o.OutputState,
	}
}

func (o HttpAuthorizerPtrOutput) Elem() HttpAuthorizerOutput {
	return o.ApplyT(func(v *HttpAuthorizer) HttpAuthorizer {
		if v != nil {
			return *v
		}
		var ret HttpAuthorizer
		return ret
	}).(HttpAuthorizerOutput)
}

// Required credentials as an IAM role for API Gateway to invoke the authorizer.
// Supported only for `REQUEST` authorizers.
func (o HttpAuthorizerPtrOutput) AuthorizerCredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerCredentialsArn
	}).(pulumi.StringPtrOutput)
}

// Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.
// Valid values: `1.0`, `2.0`.
func (o HttpAuthorizerPtrOutput) AuthorizerPayloadFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerPayloadFormatVersion
	}).(pulumi.StringPtrOutput)
}

// Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.
// If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to `300`.
// Supported only for HTTP API Lambda authorizers.
func (o HttpAuthorizerPtrOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *int {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// Authorizer type. Valid values: `JWT`, `REQUEST`.
// Specify `REQUEST` for a Lambda function using incoming request parameters.
// For HTTP APIs, specify `JWT` to use JSON Web Tokens.
func (o HttpAuthorizerPtrOutput) AuthorizerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizerType
	}).(pulumi.StringPtrOutput)
}

// Authorizer's Uniform Resource Identifier (URI).
// For `REQUEST` authorizers this must be a well-formed Lambda function URI, such as the `invoke_arn` attribute of the `aws.lambda.Function` resource.
// Supported only for `REQUEST` authorizers. Must be between 1 and 2048 characters in length.
func (o HttpAuthorizerPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

// Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.
// Supported only for HTTP APIs.
func (o HttpAuthorizerPtrOutput) EnableSimpleResponses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSimpleResponses
	}).(pulumi.BoolPtrOutput)
}

// Identity sources for which authorization is requested.
// For `REQUEST` authorizers the value is a list of one or more mapping expressions of the specified request parameters.
// For `JWT` authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.
func (o HttpAuthorizerPtrOutput) IdentitySources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpAuthorizer) []string {
		if v == nil {
			return nil
		}
		return v.IdentitySources
	}).(pulumi.StringArrayOutput)
}

// Configuration of a JWT authorizer. Required for the `JWT` authorizer type.
// Supported only for HTTP APIs.
func (o HttpAuthorizerPtrOutput) JwtConfiguration() apigatewayv2.AuthorizerJwtConfigurationPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *apigatewayv2.AuthorizerJwtConfiguration {
		if v == nil {
			return nil
		}
		return v.JwtConfiguration
	}).(apigatewayv2.AuthorizerJwtConfigurationPtrOutput)
}

// Name of the authorizer. Must be between 1 and 128 characters in length.
func (o HttpAuthorizerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpAuthorizer) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Manages an Amazon API Gateway Version 2 integration.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:           pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				IntegrationType: pulumi.String("MOCK"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Lambda Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lambda"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleFunction, err := lambda.NewFunction(ctx, "exampleFunction", &lambda.FunctionArgs{
//				Code:    pulumi.NewFileArchive("example.zip"),
//				Role:    pulumi.Any(aws_iam_role.Example.Arn),
//				Handler: pulumi.String("index.handler"),
//				Runtime: pulumi.String("nodejs16.x"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigatewayv2.NewIntegration(ctx, "exampleIntegration", &apigatewayv2.IntegrationArgs{
//				ApiId:                   pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				IntegrationType:         pulumi.String("AWS_PROXY"),
//				ConnectionType:          pulumi.String("INTERNET"),
//				ContentHandlingStrategy: pulumi.String("CONVERT_TO_TEXT"),
//				Description:             pulumi.String("Lambda example"),
//				IntegrationMethod:       pulumi.String("POST"),
//				IntegrationUri:          exampleFunction.InvokeArn,
//				PassthroughBehavior:     pulumi.String("WHEN_NO_MATCH"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### AWS Service Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:              pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				CredentialsArn:     pulumi.Any(aws_iam_role.Example.Arn),
//				Description:        pulumi.String("SQS example"),
//				IntegrationType:    pulumi.String("AWS_PROXY"),
//				IntegrationSubtype: pulumi.String("SQS-SendMessage"),
//				RequestParameters: pulumi.StringMap{
//					"QueueUrl":    pulumi.String("$request.header.queueUrl"),
//					"MessageBody": pulumi.String("$request.body.message"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Private Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:             pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				CredentialsArn:    pulumi.Any(aws_iam_role.Example.Arn),
//				Description:       pulumi.String("Example with a load balancer"),
//				IntegrationType:   pulumi.String("HTTP_PROXY"),
//				IntegrationUri:    pulumi.Any(aws_lb_listener.Example.Arn),
//				IntegrationMethod: pulumi.String("ANY"),
//				ConnectionType:    pulumi.String("VPC_LINK"),
//				ConnectionId:      pulumi.Any(aws_apigatewayv2_vpc_link.Example.Id),
//				TlsConfig: &apigatewayv2.IntegrationTlsConfigArgs{
//					ServerNameToVerify: pulumi.String("example.com"),
//				},
//				RequestParameters: pulumi.StringMap{
//					"append:header.authforintegration": pulumi.String("$context.authorizer.authorizerResponse"),
//					"overwrite:path":                   pulumi.String("staticValueForIntegration"),
//				},
//				ResponseParameters: apigatewayv2.IntegrationResponseParameterArray{
//					&apigatewayv2.IntegrationResponseParameterArgs{
//						StatusCode: pulumi.String("403"),
//						Mappings: pulumi.StringMap{
//							"append:header.auth": pulumi.String("$context.authorizer.authorizerResponse"),
//						},
//					},
//					&apigatewayv2.IntegrationResponseParameterArgs{
//						StatusCode: pulumi.String("200"),
//						Mappings: pulumi.StringMap{
//							"overwrite:statuscode": pulumi.String("204"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_integration` using the API identifier and integration identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/integration:Integration example aabbccddee/1122334
//
// ```
//
//	-> __Note:__ The API Gateway managed integration created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.
type HttpIntegration struct {
	// ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
	ConnectionId *string `pulumi:"connectionId"`
	// Type of the network connection to the integration endpoint. Valid values: `INTERNET`, `VPC_LINK`. Default is `INTERNET`.
	ConnectionType *string `pulumi:"connectionType"`
	// Credentials required for the integration, if any.
	CredentialsArn *string `pulumi:"credentialsArn"`
	// Description of the integration.
	Description *string `pulumi:"description"`
	// Integration's HTTP method. Must be specified if `integration_type` is not `MOCK`.
	IntegrationMethod *string `pulumi:"integrationMethod"`
	// AWS service action to invoke. Supported only for HTTP APIs when `integration_type` is `AWS_PROXY`. See the [AWS service integration reference](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html) documentation for supported values. Must be between 1 and 128 characters in length.
	IntegrationSubtype *string `pulumi:"integrationSubtype"`
	// Integration type of an integration.
	// Valid values: `AWS` (supported only for WebSocket APIs), `AWS_PROXY`, `HTTP` (supported only for WebSocket APIs), `HTTP_PROXY`, `MOCK` (supported only for WebSocket APIs). For an HTTP API private integration, use `HTTP_PROXY`.
	IntegrationType *string `pulumi:"integrationType"`
	// URI of the Lambda function for a Lambda proxy integration, when `integration_type` is `AWS_PROXY`.
	// For an `HTTP` integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
	//  Exactly one of `lambda`, `lambdaInvokeArn` or `integrationUri` must be specified.
	IntegrationUri *string `pulumi:"integrationUri"`
	// The ARN of a lambda function to invoke for the integration. This is used to automatically calculate the `integrationType` and `integrationUri` property of the integration and give permission for the API Gateway to execute the lambda. Exactly one of `lambdaArn` or `integrationUri` must be specified.
	LambdaArn *string `pulumi:"lambdaArn"`
	// The [format of the payload](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) sent to an integration. Valid values: `1.0`, `2.0`. Default is `1.0`.
	PayloadFormatVersion *string `pulumi:"payloadFormatVersion"`
	// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
	// For HTTP APIs with a specified `integration_subtype`, a key-value map specifying parameters that are passed to `AWS_PROXY` integrations.
	// For HTTP APIs without a specified `integration_subtype`, a key-value map specifying how to transform HTTP requests before sending them to the backend.
	// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html) for details.
	RequestParameters map[string]string `pulumi:"requestParameters"`
	// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
	ResponseParameters []apigatewayv2.IntegrationResponseParameter `pulumi:"responseParameters"`
	// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
	// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
	// this provider will only perform drift detection of its value when present in a configuration.
	TimeoutMilliseconds *int `pulumi:"timeoutMilliseconds"`
	// TLS configuration for a private integration. Supported only for HTTP APIs.
	TlsConfig *apigatewayv2.IntegrationTlsConfig `pulumi:"tlsConfig"`
}

// HttpIntegrationInput is an input type that accepts HttpIntegrationArgs and HttpIntegrationOutput values.
// You can construct a concrete instance of `HttpIntegrationInput` via:
//
//	HttpIntegrationArgs{...}
type HttpIntegrationInput interface {
	pulumi.Input

	ToHttpIntegrationOutput() HttpIntegrationOutput
	ToHttpIntegrationOutputWithContext(context.Context) HttpIntegrationOutput
}

// Manages an Amazon API Gateway Version 2 integration.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:           pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				IntegrationType: pulumi.String("MOCK"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Lambda Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lambda"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleFunction, err := lambda.NewFunction(ctx, "exampleFunction", &lambda.FunctionArgs{
//				Code:    pulumi.NewFileArchive("example.zip"),
//				Role:    pulumi.Any(aws_iam_role.Example.Arn),
//				Handler: pulumi.String("index.handler"),
//				Runtime: pulumi.String("nodejs16.x"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigatewayv2.NewIntegration(ctx, "exampleIntegration", &apigatewayv2.IntegrationArgs{
//				ApiId:                   pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				IntegrationType:         pulumi.String("AWS_PROXY"),
//				ConnectionType:          pulumi.String("INTERNET"),
//				ContentHandlingStrategy: pulumi.String("CONVERT_TO_TEXT"),
//				Description:             pulumi.String("Lambda example"),
//				IntegrationMethod:       pulumi.String("POST"),
//				IntegrationUri:          exampleFunction.InvokeArn,
//				PassthroughBehavior:     pulumi.String("WHEN_NO_MATCH"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### AWS Service Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:              pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				CredentialsArn:     pulumi.Any(aws_iam_role.Example.Arn),
//				Description:        pulumi.String("SQS example"),
//				IntegrationType:    pulumi.String("AWS_PROXY"),
//				IntegrationSubtype: pulumi.String("SQS-SendMessage"),
//				RequestParameters: pulumi.StringMap{
//					"QueueUrl":    pulumi.String("$request.header.queueUrl"),
//					"MessageBody": pulumi.String("$request.body.message"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Private Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:             pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				CredentialsArn:    pulumi.Any(aws_iam_role.Example.Arn),
//				Description:       pulumi.String("Example with a load balancer"),
//				IntegrationType:   pulumi.String("HTTP_PROXY"),
//				IntegrationUri:    pulumi.Any(aws_lb_listener.Example.Arn),
//				IntegrationMethod: pulumi.String("ANY"),
//				ConnectionType:    pulumi.String("VPC_LINK"),
//				ConnectionId:      pulumi.Any(aws_apigatewayv2_vpc_link.Example.Id),
//				TlsConfig: &apigatewayv2.IntegrationTlsConfigArgs{
//					ServerNameToVerify: pulumi.String("example.com"),
//				},
//				RequestParameters: pulumi.StringMap{
//					"append:header.authforintegration": pulumi.String("$context.authorizer.authorizerResponse"),
//					"overwrite:path":                   pulumi.String("staticValueForIntegration"),
//				},
//				ResponseParameters: apigatewayv2.IntegrationResponseParameterArray{
//					&apigatewayv2.IntegrationResponseParameterArgs{
//						StatusCode: pulumi.String("403"),
//						Mappings: pulumi.StringMap{
//							"append:header.auth": pulumi.String("$context.authorizer.authorizerResponse"),
//						},
//					},
//					&apigatewayv2.IntegrationResponseParameterArgs{
//						StatusCode: pulumi.String("200"),
//						Mappings: pulumi.StringMap{
//							"overwrite:statuscode": pulumi.String("204"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_integration` using the API identifier and integration identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/integration:Integration example aabbccddee/1122334
//
// ```
//
//	-> __Note:__ The API Gateway managed integration created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.
type HttpIntegrationArgs struct {
	// ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
	ConnectionId pulumi.StringPtrInput `pulumi:"connectionId"`
	// Type of the network connection to the integration endpoint. Valid values: `INTERNET`, `VPC_LINK`. Default is `INTERNET`.
	ConnectionType pulumi.StringPtrInput `pulumi:"connectionType"`
	// Credentials required for the integration, if any.
	CredentialsArn pulumi.StringPtrInput `pulumi:"credentialsArn"`
	// Description of the integration.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Integration's HTTP method. Must be specified if `integration_type` is not `MOCK`.
	IntegrationMethod pulumi.StringPtrInput `pulumi:"integrationMethod"`
	// AWS service action to invoke. Supported only for HTTP APIs when `integration_type` is `AWS_PROXY`. See the [AWS service integration reference](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html) documentation for supported values. Must be between 1 and 128 characters in length.
	IntegrationSubtype pulumi.StringPtrInput `pulumi:"integrationSubtype"`
	// Integration type of an integration.
	// Valid values: `AWS` (supported only for WebSocket APIs), `AWS_PROXY`, `HTTP` (supported only for WebSocket APIs), `HTTP_PROXY`, `MOCK` (supported only for WebSocket APIs). For an HTTP API private integration, use `HTTP_PROXY`.
	IntegrationType pulumi.StringPtrInput `pulumi:"integrationType"`
	// URI of the Lambda function for a Lambda proxy integration, when `integration_type` is `AWS_PROXY`.
	// For an `HTTP` integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
	//  Exactly one of `lambda`, `lambdaInvokeArn` or `integrationUri` must be specified.
	IntegrationUri pulumi.StringPtrInput `pulumi:"integrationUri"`
	// The ARN of a lambda function to invoke for the integration. This is used to automatically calculate the `integrationType` and `integrationUri` property of the integration and give permission for the API Gateway to execute the lambda. Exactly one of `lambdaArn` or `integrationUri` must be specified.
	LambdaArn pulumi.StringPtrInput `pulumi:"lambdaArn"`
	// The [format of the payload](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) sent to an integration. Valid values: `1.0`, `2.0`. Default is `1.0`.
	PayloadFormatVersion pulumi.StringPtrInput `pulumi:"payloadFormatVersion"`
	// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
	// For HTTP APIs with a specified `integration_subtype`, a key-value map specifying parameters that are passed to `AWS_PROXY` integrations.
	// For HTTP APIs without a specified `integration_subtype`, a key-value map specifying how to transform HTTP requests before sending them to the backend.
	// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html) for details.
	RequestParameters pulumi.StringMapInput `pulumi:"requestParameters"`
	// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
	ResponseParameters apigatewayv2.IntegrationResponseParameterArrayInput `pulumi:"responseParameters"`
	// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
	// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
	// this provider will only perform drift detection of its value when present in a configuration.
	TimeoutMilliseconds pulumi.IntPtrInput `pulumi:"timeoutMilliseconds"`
	// TLS configuration for a private integration. Supported only for HTTP APIs.
	TlsConfig apigatewayv2.IntegrationTlsConfigPtrInput `pulumi:"tlsConfig"`
}

func (HttpIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpIntegration)(nil)).Elem()
}

func (i HttpIntegrationArgs) ToHttpIntegrationOutput() HttpIntegrationOutput {
	return i.ToHttpIntegrationOutputWithContext(context.Background())
}

func (i HttpIntegrationArgs) ToHttpIntegrationOutputWithContext(ctx context.Context) HttpIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpIntegrationOutput)
}

func (i HttpIntegrationArgs) ToOutput(ctx context.Context) pulumix.Output[HttpIntegration] {
	return pulumix.Output[HttpIntegration]{
		OutputState: i.ToHttpIntegrationOutputWithContext(ctx).OutputState,
	}
}

func (i HttpIntegrationArgs) ToHttpIntegrationPtrOutput() HttpIntegrationPtrOutput {
	return i.ToHttpIntegrationPtrOutputWithContext(context.Background())
}

func (i HttpIntegrationArgs) ToHttpIntegrationPtrOutputWithContext(ctx context.Context) HttpIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpIntegrationOutput).ToHttpIntegrationPtrOutputWithContext(ctx)
}

// HttpIntegrationPtrInput is an input type that accepts HttpIntegrationArgs, HttpIntegrationPtr and HttpIntegrationPtrOutput values.
// You can construct a concrete instance of `HttpIntegrationPtrInput` via:
//
//	        HttpIntegrationArgs{...}
//
//	or:
//
//	        nil
type HttpIntegrationPtrInput interface {
	pulumi.Input

	ToHttpIntegrationPtrOutput() HttpIntegrationPtrOutput
	ToHttpIntegrationPtrOutputWithContext(context.Context) HttpIntegrationPtrOutput
}

type httpIntegrationPtrType HttpIntegrationArgs

func HttpIntegrationPtr(v *HttpIntegrationArgs) HttpIntegrationPtrInput {
	return (*httpIntegrationPtrType)(v)
}

func (*httpIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpIntegration)(nil)).Elem()
}

func (i *httpIntegrationPtrType) ToHttpIntegrationPtrOutput() HttpIntegrationPtrOutput {
	return i.ToHttpIntegrationPtrOutputWithContext(context.Background())
}

func (i *httpIntegrationPtrType) ToHttpIntegrationPtrOutputWithContext(ctx context.Context) HttpIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpIntegrationPtrOutput)
}

func (i *httpIntegrationPtrType) ToOutput(ctx context.Context) pulumix.Output[*HttpIntegration] {
	return pulumix.Output[*HttpIntegration]{
		OutputState: i.ToHttpIntegrationPtrOutputWithContext(ctx).OutputState,
	}
}

// Manages an Amazon API Gateway Version 2 integration.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:           pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				IntegrationType: pulumi.String("MOCK"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Lambda Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lambda"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleFunction, err := lambda.NewFunction(ctx, "exampleFunction", &lambda.FunctionArgs{
//				Code:    pulumi.NewFileArchive("example.zip"),
//				Role:    pulumi.Any(aws_iam_role.Example.Arn),
//				Handler: pulumi.String("index.handler"),
//				Runtime: pulumi.String("nodejs16.x"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigatewayv2.NewIntegration(ctx, "exampleIntegration", &apigatewayv2.IntegrationArgs{
//				ApiId:                   pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				IntegrationType:         pulumi.String("AWS_PROXY"),
//				ConnectionType:          pulumi.String("INTERNET"),
//				ContentHandlingStrategy: pulumi.String("CONVERT_TO_TEXT"),
//				Description:             pulumi.String("Lambda example"),
//				IntegrationMethod:       pulumi.String("POST"),
//				IntegrationUri:          exampleFunction.InvokeArn,
//				PassthroughBehavior:     pulumi.String("WHEN_NO_MATCH"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### AWS Service Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:              pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				CredentialsArn:     pulumi.Any(aws_iam_role.Example.Arn),
//				Description:        pulumi.String("SQS example"),
//				IntegrationType:    pulumi.String("AWS_PROXY"),
//				IntegrationSubtype: pulumi.String("SQS-SendMessage"),
//				RequestParameters: pulumi.StringMap{
//					"QueueUrl":    pulumi.String("$request.header.queueUrl"),
//					"MessageBody": pulumi.String("$request.body.message"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Private Integration
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewIntegration(ctx, "example", &apigatewayv2.IntegrationArgs{
//				ApiId:             pulumi.Any(aws_apigatewayv2_api.Example.Id),
//				CredentialsArn:    pulumi.Any(aws_iam_role.Example.Arn),
//				Description:       pulumi.String("Example with a load balancer"),
//				IntegrationType:   pulumi.String("HTTP_PROXY"),
//				IntegrationUri:    pulumi.Any(aws_lb_listener.Example.Arn),
//				IntegrationMethod: pulumi.String("ANY"),
//				ConnectionType:    pulumi.String("VPC_LINK"),
//				ConnectionId:      pulumi.Any(aws_apigatewayv2_vpc_link.Example.Id),
//				TlsConfig: &apigatewayv2.IntegrationTlsConfigArgs{
//					ServerNameToVerify: pulumi.String("example.com"),
//				},
//				RequestParameters: pulumi.StringMap{
//					"append:header.authforintegration": pulumi.String("$context.authorizer.authorizerResponse"),
//					"overwrite:path":                   pulumi.String("staticValueForIntegration"),
//				},
//				ResponseParameters: apigatewayv2.IntegrationResponseParameterArray{
//					&apigatewayv2.IntegrationResponseParameterArgs{
//						StatusCode: pulumi.String("403"),
//						Mappings: pulumi.StringMap{
//							"append:header.auth": pulumi.String("$context.authorizer.authorizerResponse"),
//						},
//					},
//					&apigatewayv2.IntegrationResponseParameterArgs{
//						StatusCode: pulumi.String("200"),
//						Mappings: pulumi.StringMap{
//							"overwrite:statuscode": pulumi.String("204"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_integration` using the API identifier and integration identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/integration:Integration example aabbccddee/1122334
//
// ```
//
//	-> __Note:__ The API Gateway managed integration created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.
type HttpIntegrationOutput struct{ *pulumi.OutputState }

func (HttpIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpIntegration)(nil)).Elem()
}

func (o HttpIntegrationOutput) ToHttpIntegrationOutput() HttpIntegrationOutput {
	return o
}

func (o HttpIntegrationOutput) ToHttpIntegrationOutputWithContext(ctx context.Context) HttpIntegrationOutput {
	return o
}

func (o HttpIntegrationOutput) ToHttpIntegrationPtrOutput() HttpIntegrationPtrOutput {
	return o.ToHttpIntegrationPtrOutputWithContext(context.Background())
}

func (o HttpIntegrationOutput) ToHttpIntegrationPtrOutputWithContext(ctx context.Context) HttpIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpIntegration) *HttpIntegration {
		return &v
	}).(HttpIntegrationPtrOutput)
}

func (o HttpIntegrationOutput) ToOutput(ctx context.Context) pulumix.Output[HttpIntegration] {
	return pulumix.Output[HttpIntegration]{
		OutputState: o.OutputState,
	}
}

// ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
func (o HttpIntegrationOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

// Type of the network connection to the integration endpoint. Valid values: `INTERNET`, `VPC_LINK`. Default is `INTERNET`.
func (o HttpIntegrationOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

// Credentials required for the integration, if any.
func (o HttpIntegrationOutput) CredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.CredentialsArn }).(pulumi.StringPtrOutput)
}

// Description of the integration.
func (o HttpIntegrationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Integration's HTTP method. Must be specified if `integration_type` is not `MOCK`.
func (o HttpIntegrationOutput) IntegrationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.IntegrationMethod }).(pulumi.StringPtrOutput)
}

// AWS service action to invoke. Supported only for HTTP APIs when `integration_type` is `AWS_PROXY`. See the [AWS service integration reference](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html) documentation for supported values. Must be between 1 and 128 characters in length.
func (o HttpIntegrationOutput) IntegrationSubtype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.IntegrationSubtype }).(pulumi.StringPtrOutput)
}

// Integration type of an integration.
// Valid values: `AWS` (supported only for WebSocket APIs), `AWS_PROXY`, `HTTP` (supported only for WebSocket APIs), `HTTP_PROXY`, `MOCK` (supported only for WebSocket APIs). For an HTTP API private integration, use `HTTP_PROXY`.
func (o HttpIntegrationOutput) IntegrationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.IntegrationType }).(pulumi.StringPtrOutput)
}

// URI of the Lambda function for a Lambda proxy integration, when `integration_type` is `AWS_PROXY`.
// For an `HTTP` integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
//
//	Exactly one of `lambda`, `lambdaInvokeArn` or `integrationUri` must be specified.
func (o HttpIntegrationOutput) IntegrationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.IntegrationUri }).(pulumi.StringPtrOutput)
}

// The ARN of a lambda function to invoke for the integration. This is used to automatically calculate the `integrationType` and `integrationUri` property of the integration and give permission for the API Gateway to execute the lambda. Exactly one of `lambdaArn` or `integrationUri` must be specified.
func (o HttpIntegrationOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.LambdaArn }).(pulumi.StringPtrOutput)
}

// The [format of the payload](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) sent to an integration. Valid values: `1.0`, `2.0`. Default is `1.0`.
func (o HttpIntegrationOutput) PayloadFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *string { return v.PayloadFormatVersion }).(pulumi.StringPtrOutput)
}

// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
// For HTTP APIs with a specified `integration_subtype`, a key-value map specifying parameters that are passed to `AWS_PROXY` integrations.
// For HTTP APIs without a specified `integration_subtype`, a key-value map specifying how to transform HTTP requests before sending them to the backend.
// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html) for details.
func (o HttpIntegrationOutput) RequestParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v HttpIntegration) map[string]string { return v.RequestParameters }).(pulumi.StringMapOutput)
}

// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
func (o HttpIntegrationOutput) ResponseParameters() apigatewayv2.IntegrationResponseParameterArrayOutput {
	return o.ApplyT(func(v HttpIntegration) []apigatewayv2.IntegrationResponseParameter { return v.ResponseParameters }).(apigatewayv2.IntegrationResponseParameterArrayOutput)
}

// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
// this provider will only perform drift detection of its value when present in a configuration.
func (o HttpIntegrationOutput) TimeoutMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *int { return v.TimeoutMilliseconds }).(pulumi.IntPtrOutput)
}

// TLS configuration for a private integration. Supported only for HTTP APIs.
func (o HttpIntegrationOutput) TlsConfig() apigatewayv2.IntegrationTlsConfigPtrOutput {
	return o.ApplyT(func(v HttpIntegration) *apigatewayv2.IntegrationTlsConfig { return v.TlsConfig }).(apigatewayv2.IntegrationTlsConfigPtrOutput)
}

type HttpIntegrationPtrOutput struct{ *pulumi.OutputState }

func (HttpIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpIntegration)(nil)).Elem()
}

func (o HttpIntegrationPtrOutput) ToHttpIntegrationPtrOutput() HttpIntegrationPtrOutput {
	return o
}

func (o HttpIntegrationPtrOutput) ToHttpIntegrationPtrOutputWithContext(ctx context.Context) HttpIntegrationPtrOutput {
	return o
}

func (o HttpIntegrationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*HttpIntegration] {
	return pulumix.Output[*HttpIntegration]{
		OutputState: o.OutputState,
	}
}

func (o HttpIntegrationPtrOutput) Elem() HttpIntegrationOutput {
	return o.ApplyT(func(v *HttpIntegration) HttpIntegration {
		if v != nil {
			return *v
		}
		var ret HttpIntegration
		return ret
	}).(HttpIntegrationOutput)
}

// ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
func (o HttpIntegrationPtrOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionId
	}).(pulumi.StringPtrOutput)
}

// Type of the network connection to the integration endpoint. Valid values: `INTERNET`, `VPC_LINK`. Default is `INTERNET`.
func (o HttpIntegrationPtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// Credentials required for the integration, if any.
func (o HttpIntegrationPtrOutput) CredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsArn
	}).(pulumi.StringPtrOutput)
}

// Description of the integration.
func (o HttpIntegrationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Integration's HTTP method. Must be specified if `integration_type` is not `MOCK`.
func (o HttpIntegrationPtrOutput) IntegrationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationMethod
	}).(pulumi.StringPtrOutput)
}

// AWS service action to invoke. Supported only for HTTP APIs when `integration_type` is `AWS_PROXY`. See the [AWS service integration reference](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html) documentation for supported values. Must be between 1 and 128 characters in length.
func (o HttpIntegrationPtrOutput) IntegrationSubtype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationSubtype
	}).(pulumi.StringPtrOutput)
}

// Integration type of an integration.
// Valid values: `AWS` (supported only for WebSocket APIs), `AWS_PROXY`, `HTTP` (supported only for WebSocket APIs), `HTTP_PROXY`, `MOCK` (supported only for WebSocket APIs). For an HTTP API private integration, use `HTTP_PROXY`.
func (o HttpIntegrationPtrOutput) IntegrationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationType
	}).(pulumi.StringPtrOutput)
}

// URI of the Lambda function for a Lambda proxy integration, when `integration_type` is `AWS_PROXY`.
// For an `HTTP` integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
//
//	Exactly one of `lambda`, `lambdaInvokeArn` or `integrationUri` must be specified.
func (o HttpIntegrationPtrOutput) IntegrationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationUri
	}).(pulumi.StringPtrOutput)
}

// The ARN of a lambda function to invoke for the integration. This is used to automatically calculate the `integrationType` and `integrationUri` property of the integration and give permission for the API Gateway to execute the lambda. Exactly one of `lambdaArn` or `integrationUri` must be specified.
func (o HttpIntegrationPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// The [format of the payload](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) sent to an integration. Valid values: `1.0`, `2.0`. Default is `1.0`.
func (o HttpIntegrationPtrOutput) PayloadFormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *string {
		if v == nil {
			return nil
		}
		return v.PayloadFormatVersion
	}).(pulumi.StringPtrOutput)
}

// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
// For HTTP APIs with a specified `integration_subtype`, a key-value map specifying parameters that are passed to `AWS_PROXY` integrations.
// For HTTP APIs without a specified `integration_subtype`, a key-value map specifying how to transform HTTP requests before sending them to the backend.
// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html) for details.
func (o HttpIntegrationPtrOutput) RequestParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HttpIntegration) map[string]string {
		if v == nil {
			return nil
		}
		return v.RequestParameters
	}).(pulumi.StringMapOutput)
}

// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
func (o HttpIntegrationPtrOutput) ResponseParameters() apigatewayv2.IntegrationResponseParameterArrayOutput {
	return o.ApplyT(func(v *HttpIntegration) []apigatewayv2.IntegrationResponseParameter {
		if v == nil {
			return nil
		}
		return v.ResponseParameters
	}).(apigatewayv2.IntegrationResponseParameterArrayOutput)
}

// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
// this provider will only perform drift detection of its value when present in a configuration.
func (o HttpIntegrationPtrOutput) TimeoutMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutMilliseconds
	}).(pulumi.IntPtrOutput)
}

// TLS configuration for a private integration. Supported only for HTTP APIs.
func (o HttpIntegrationPtrOutput) TlsConfig() apigatewayv2.IntegrationTlsConfigPtrOutput {
	return o.ApplyT(func(v *HttpIntegration) *apigatewayv2.IntegrationTlsConfig {
		if v == nil {
			return nil
		}
		return v.TlsConfig
	}).(apigatewayv2.IntegrationTlsConfigPtrOutput)
}

// Manages an Amazon API Gateway Version 2 route.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html) for [WebSocket](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-develop-routes.html) and [HTTP](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-routes.html) APIs.
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApi, err := apigatewayv2.NewApi(ctx, "exampleApi", &apigatewayv2.ApiArgs{
//				ProtocolType:             pulumi.String("WEBSOCKET"),
//				RouteSelectionExpression: pulumi.String("$request.body.action"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigatewayv2.NewRoute(ctx, "exampleRoute", &apigatewayv2.RouteArgs{
//				ApiId:    exampleApi.ID(),
//				RouteKey: pulumi.String("$default"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### HTTP Proxy Integration
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApi, err := apigatewayv2.NewApi(ctx, "exampleApi", &apigatewayv2.ApiArgs{
//				ProtocolType: pulumi.String("HTTP"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleIntegration, err := apigatewayv2.NewIntegration(ctx, "exampleIntegration", &apigatewayv2.IntegrationArgs{
//				ApiId:             exampleApi.ID(),
//				IntegrationType:   pulumi.String("HTTP_PROXY"),
//				IntegrationMethod: pulumi.String("ANY"),
//				IntegrationUri:    pulumi.String("https://example.com/{proxy}"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigatewayv2.NewRoute(ctx, "exampleRoute", &apigatewayv2.RouteArgs{
//				ApiId:    exampleApi.ID(),
//				RouteKey: pulumi.String("ANY /example/{proxy+}"),
//				Target: exampleIntegration.ID().ApplyT(func(id string) (string, error) {
//					return fmt.Sprintf("integrations/%v", id), nil
//				}).(pulumi.StringOutput),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_route` using the API identifier and route identifier. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/route:Route example aabbccddee/1122334
//
// ```
//
//	-> __Note:__ The API Gateway managed route created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.
type HttpRoute struct {
	// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
	ApiKeyRequired *bool `pulumi:"apiKeyRequired"`
	// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
	AuthorizationScopes []string `pulumi:"authorizationScopes"`
	// Authorization type for the route.
	// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// Defaults to `NONE`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Details of the authorizer to be created for this route. Only one of `authorizer`, `authorizerName` or `target` can be specified.
	Authorizer *HttpAuthorizer `pulumi:"authorizer"`
	// Identifier of the `aws.apigatewayv2.Authorizer` resource to be associated with this route.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The name of the target authorizer for the route specified in the `authorizers` property. This is used to automatically calculate the `authorizerId` property of the route.
	AuthorizerName *string `pulumi:"authorizerName"`
	// Details of the integration to be created for this route. Only one of `integration`, `integrationName` or `target` can be specified.
	Integration *HttpIntegration `pulumi:"integration"`
	// The name of the target integration for the route specified in the `integrations` property. This is used to automatically calculate the `target` property of the route. Only one of `integration`, `integrationName` or `target` can be specified. This does not need to be prefixed with "integrations/".
	IntegrationName *string `pulumi:"integrationName"`
	// Operation name for the route. Must be between 1 and 64 characters in length.
	OperationName *string `pulumi:"operationName"`
	// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `aws.apigatewayv2.Integration` resource.
	//  Only one of `integration`, `integrationName` or `target` can be specified.
	Target *string `pulumi:"target"`
}

// Manages an Amazon API Gateway Version 2 stage.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigatewayv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigatewayv2.NewStage(ctx, "example", &apigatewayv2.StageArgs{
//				ApiId: pulumi.Any(aws_apigatewayv2_api.Example.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_apigatewayv2_stage` using the API identifier and stage name. For example:
//
// ```sh
//
//	$ pulumi import aws:apigatewayv2/stage:Stage example aabbccddee/example-stage
//
// ```
//
//	-> __Note:__ The API Gateway managed stage created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.
type HttpStage struct {
	// Settings for logging access in this stage.
	// Use the `aws.apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
	AccessLogSettings *apigatewayv2.StageAccessLogSettings `pulumi:"accessLogSettings"`
	// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Identifier of a client certificate for the stage. Use the `aws.apigateway.ClientCertificate` resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// Default route settings for the stage.
	DefaultRouteSettings *apigatewayv2.StageDefaultRouteSettings `pulumi:"defaultRouteSettings"`
	// Deployment identifier of the stage. Use the `aws.apigatewayv2.Deployment` resource to configure a deployment.
	DeploymentId *string `pulumi:"deploymentId"`
	// Description for the stage. Must be less than or equal to 1024 characters in length.
	Description *string `pulumi:"description"`
	// Name of the stage. Must be between 1 and 128 characters in length.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Route settings for the stage.
	RouteSettings []apigatewayv2.StageRouteSetting `pulumi:"routeSettings"`
	// Map that defines the stage variables for the stage.
	StageVariables map[string]string `pulumi:"stageVariables"`
	// Map of tags to assign to the stage. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationInput)(nil)).Elem(), DomainConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationPtrInput)(nil)).Elem(), DomainConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpAuthorizerInput)(nil)).Elem(), HttpAuthorizerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpAuthorizerPtrInput)(nil)).Elem(), HttpAuthorizerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpIntegrationInput)(nil)).Elem(), HttpIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpIntegrationPtrInput)(nil)).Elem(), HttpIntegrationArgs{})
	pulumi.RegisterOutputType(DomainConfigurationOutput{})
	pulumi.RegisterOutputType(DomainConfigurationPtrOutput{})
	pulumi.RegisterOutputType(HttpAuthorizerOutput{})
	pulumi.RegisterOutputType(HttpAuthorizerPtrOutput{})
	pulumi.RegisterOutputType(HttpIntegrationOutput{})
	pulumi.RegisterOutputType(HttpIntegrationPtrOutput{})
}
